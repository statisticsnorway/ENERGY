PROC GLOBAL

	// This will be set only in the Menu application as a parameter and will be fetched from there
	String country;

	//Country specific variables
	numeric gridPrice = 3700;	//country specific price to connect to the grid
	numeric  highDevicePrice = 5000;//Country specific prices for solar devices

	//NB: When filling the following array with country specific cookstoves
	//Please notice that the order is important: The two first elements should be wood stoves, the to last charcoal!
	array String cookstove(4) = "COUNTRY SPECIFIC Aspirational wood ICS",
								"LOCALLY AVAILABLE, popular affordable wood ICS",
								"COUNTRY SPECIFIC Aspirational charcoal ICS",
								"LOCALLY AVAILABLE, popular affordable charcoal ICS";
	array cookStovePrices(4) = 2100,700,2100,700;	//Reference prices for the above defined cookStoves

	//Uncomment the line according to countiry
	String ElectricityCompany = "Tanzania: TANESCO/REA, Mozambique: EDM";	//English version. Both
	//String ElectricityCompany = "TANESCO/REA";	//Tanzania
	//String ElectricityCompany = "EDM";			//Mozambique



	//Variables reused in multiple questions/fields or needed for CAPI questions. Need to be globally declared
	string currMember;	//Main respondent throughout the questionnaire.
	string solarDeviceType; // Type of solar home system, used in second C section
	string lampType;
	numeric CF;
	string cookType;
	string hhItemExtra;
	numeric energySources; // number of energy sources, used in first C section
	//numeric rangeStart; // Start of a range, to be used in common error message for ranges
	//numeric rangeEnd; // End of a range, to be used in common error message for ranges
	//numeric rangeUnknown; // Unknown range, to be used in common error message for ranges
	numeric personCooksMostOften; // To be calculated and used in I, K and O sections
	string  personDecideToBuyStove ; // To be  calculated in I12 and used in heading in K section
	string  headName;
	string  femaleHeadName;
	string  femalespouseName;
	string  chosenChildName; // Name of chosen child for O section (health)
	numeric schoolBoys = 0;
	numeric schoolGirls = 0;

	valueset familyMembers;	//Keeping the valueset global as it is used often
	valueset adultMembers;	//Also used frequently. Family members >= 15 years of age

	array hhDemographics(7) = 0,0,0,0,0,0,0;	//splitting household in age and gender groups. To facilitate skipping
											//element 1 = #women (15+ years), 2 = #girls (5-15 years), 3 = #men (15+ years),
											//4 = #boys (5 - 15 years), 5 = #children under 5,
											// 6 = adults (15 years and above), 7 = children 0-15 years
	array numeric powerSources(9);
	array string powerSourcesLabels(9);


//function to strip leading spaces (the original strip function only strips trailing spaces)


function string lstrip(string theString)
	numeric aPos = pos(" ", theString);
	while aPos = 1 do
		//leading space
		theString = theString[2];
		aPos = pos(" ", theString);
	enddo;
		lstrip = theString;
end;



function onStop()
	string currField = getSymbol();
	if currField = "AB1" then
		reenter AA10;
	else
		if AA20 <> "" then	//Questionnaire is finished
			skip to AA20;
		else
			savepartial();
			stop(1);
		endif;		
	endif;
end;



PROC HHQ_FF


PROC HHQ_QUEST

preproc

	string language = sysparm(language);
	setLanguage(language);
	
	// Fetch country parameter from Menu application
	pff menu;
	menu.load("../Menu/Menu.pff");
	country = menu.getProperty("country");

	//Have to fill the arrays for the HH members if the questionnaire is partially saved.
	if ispartial() then
		//If coming back for the interview as agreed upon, I don't want to return to exactly that field
		if getSymbol(savePartial) = "AA13" then
			advance to AA15;
		else
			//Main respondent as answered last time
			if AA18 <> "" then
				currMember = AA18;	//Not head of household
			else
				currMember = AA14;	//Head of household
			endif;

			numeric memNum = totocc(AB_HOUSEHOLD_MEMBERS_REC);
			numeric i = 1;

			familyMembers.clear();
			while i <= memNum do
				familyMembers.add(AB1(i), i);

				//adding to relevant hhdemographic group and building value set for grownups
				if visualValue(AB4(i)) = 2 then
					if visualValue(AB5(i)) >= 15 then	//woman
						inc(hhDemographics(1));
						inc(hhDemographics(6));
						adultMembers.add(AB1(i),i);
					elseif visualValue(AB5(i)) <=4 then	//little child
						inc(hhDemographics(5));
					else						//girl
						inc(hhDemographics(2));
					endif
				else
					if visualValue(AB5(i)) >= 15 then	//man
						inc(hhDemographics(3));
						inc(hhDemographics(6));
						adultMembers.add(AB1(i),i);
					elseif visualValue(AB5(i)) <= 4 then	//little child
						inc(hhDemographics(5));
					else						//boy
						inc(hhDemographics(4));
					endif;
				endif;
				if visualValue(AB5(i)) >= 0 and visualValue(AB5(i)) < 15 then	//Child, 0-15
					inc(hhDemographics(7));
				endif;

				inc(i);
			enddo;
			
			//If no members of the household are of age 15+: Add everybody aged 12+
			if adultMembers.length() = 0 then
				i = 1;
				while i <= 20 do
					if AB1(i) = "" then
						break;	//finished
					endif;
					if AB5(i) >= 12 then
						adultMembers.add(AB1(i), i);
					endif;
					inc(i);
				enddo;
			endif;
	
			//If there are none of age 12+: Adding the whole of the household
			if adultMembers.length() = 0 then
				i = 1;
				while i <= 20 do
					if AB1(i) = "" then
						break;	//finished
					endif;
					adultMembers.add(AB1(i), i);
					inc(i);
				enddo;
			endif;


			//Name of child for questions in O-form. Only need them if the partialsaved has come that far
			if hhDemographics(7) > 0 and visualValue(O7) <> NOTAPPL then
				//chosenChildName = memberNames(visualValue(O7));
				chosenChildName = familyMembers.labels(visualValue(O7));

			endif;

			//Person number of person cooking most often (or is selected to be his/her representative
			if  visualValue(I1) <> NOTAPPL then
				PersonCooksMostOften = visualValue(I1);
			else
				//Haven't asked the question yet..
			endif;

			//Person answering female related questions
			if HHDemographics(1)> 0 and visualValue(T1) <> NOTAPPL then
				//femalespouseName = memberNames(visualValue(T1));
				femalespouseName = familyMembers.labels(visualValue(T1));
			else
				//Haven't asked the question yet..
			endif;

			//lamptype for G form is handled further down. In that case, we have not reached form F yet, so that's ok
			if visualValue(F3) <> NOTAPPL then
				lampType = getvaluelabel(F3);
			endif;


			//SolarDeviceType
			if visualValue(C10) in 3, 7, 8 then
				solarDeviceType = getvaluelabel(C10);
			endif;

		endif;
		//NB: Need to move through the ID variables to avoid error messages about them not being filled out
		//when isSavePartial().
		//The skip to the getsymbol(savePartial) happens in the postproc of the last ID item
		//is filled - the ADDRESS_LOCATION field
	endif;



postproc

	stop(1);



PROC AA1

preproc

	$ = toNumber(sysparm("REGION"));
	noinput;



PROC AA2

preproc

	$ = toNumber(sysparm("DISTRICT"));
	noInput;



PROC AA3

preproc

	$ = toNumber(sysparm("SUBDISTRICT"));
	noinput;



PROC AA4

preproc

	$ = toNumber(sysparm("LOCALITY"));
	noinput;


PROC AA5

preproc

	$ = toNumber(sysparm("VILLAGE"));
	noinput;




PROC AA6

preproc

	$ = toNumber(sysparm("EA"));
	noinput;



PROC AA7

preproc

	$ = toNumber(sysparm("URBANRURAL"));
	noinput;


PROC AA8

preproc

	AA8 = toNumber(sysparm("SERIAL"));
	noinput;


PROC AALOGIN

preproc

	$ = sysparm("LOGIN");
	noinput;



PROC AA14

preproc

	//Look up value in sample file
	SA1 = AA1; SA2 = AA2; SA3 = AA3; SA4 = AA4; SA5 = AA5; SA6 = AA6; SA8 = AA8;
	SLOGIN = AALOGIN;
	numeric ok = loadcase(SAMPLING_DICT, SLOGIN, SA1, SA2, SA3, SA4, SA5, SA6, SA8);
	$ = SA10;

	//Might as well set the other fields from the sample file too..
	ADDRESS_LOCATION = SA11;
	AA7A = SA7A;
	AA7B = SA7B;
	noInput;


PROC ADDRESS_LOCATION

preproc

	noinput;

postproc

	//All ID variables are filled out, hence I can skip to wherever i partially saved if relevant
	if isPartial() then

		//Need to find the name of the current respondent if we're still in the personal section.
		//Starting from scratch with he current person. Need to find the number of him/her
		string currentField = getSymbol(savepartial);
		if currentField <> "AB1" and (currentField[1:2] = "AB"
			or currentField[1:2] = "AC" or currentField in "A2","A3","A4","A5","A6","A7","A8") then
			numeric j = 20;
			while j >=1 do
				if visualValue(AB3(j)) <> NOTAPPL then
					break;
				endif;
				j = j - 1;
			enddo;
			skip to AB3(j + 1);
		endif;

		//other "Special" skips
		if currentField in "K1", "K2", "K3", "K4" then
			skip to K1;
		elseif currentField in "D1", "D2", "D3", "D4" then
			skip to D1;
		elseif currentField in "E1", "E2", "E3" then
			skip to E1;
		elseif currentField in "G2B", "G2C" then
			//deal with the variables that are set in the first column of a roster and reused later (ie lampType)
			numeric ptr = 4;
			while ptr >= 1 do
				if visualValue(G2B(ptr)) <> NOTAPPL then
					break;
				endif;
				ptr = ptr - 1;
			enddo;
			skip to G2A(ptr);

		else	//general skip!
			skip to getsymbol(savePartial);
		endif;
	endif;


PROC AA7A

preproc

	noinput;


PROC AA7B

preproc

	noinput;


PROC AA9

preproc

	$ = edit("99-99-99",sysdate("YYDDMM"));
	noinput;




PROC AA10

preproc

	currMember = AA14;	//Might be changed in AA15 or AA18..


postproc

	if $ = 1 then //interview OK
		skip to AA15;
	elseif $ = 2 then
		skip to AA11;
	elseif $ = 3 then
		//Normal flow - why refuse
	else	//House is vacant. Going to end
		skip to AA20;
	endif;



PROC AA10A

	skip to AA20;


PROC AA13

postproc

	if !ispartial() then
		savepartial();
		stop(1);
	endif;


PROC AA15

preproc

	if not ispartial() then
		currMember = AA14;	//To set CAPI question
	endif;

postproc

	if $ = 2 or $ = 3 then
		skip to AA17;
	endif;



PROC AA17

	if $ = 1 then
		currMember = AA14;
		skip to HHNAMES;
	endif;



PROC AA18

	currMember = $;		//main respondent


PROC AB1

preproc

	//Might as well fill in HoH and Main respondent
	if curocc() = 1 then
		$ = AA14;
	elseif curocc() = 2 then
		$ = AA18;
	endif;


postproc

	if $ = "" and curocc() = 1 then
		errmsg(tr(158));
		reenter;
	endif;

	if $ = "" then	//finished
		skip to AB_AC_FORM;
	endif;

	//make a valueset for hh members as this used frequently
	familyMembers.add($, curocc());



PROC AB3

onfocus

	if AB1(curocc()) = "" then //Finished with all family members
		//If there are no adults in the HH: adding everyone aged 12+
		if adultMembers.length() = 0 then
			numeric i = 1;
			while i <= 20 do
				if AB1(i) = "" then
					break;	//finished
				endif;
				if AB5(i) >= 12 then
					adultMembers.add(AB1(i), i);
				endif;
				inc(i);
			enddo;
		endif;
	
		//Just for the fun of it: If there are none of age 12+: Adding the whole of the household
		if adultMembers.length() = 0 then
			numeric i = 1;
			while i <= 20 do
				if AB1(i) = "" then
					break;	//finished
				endif;
				adultMembers.add(AB1(i), i);
				inc(i);
			enddo;
		endif;
		skip to B_FORM;	
	endif;

	//Setting HoH as I already know that
	if curocc() = 1 then
		$ = 1;
		 headName = AB1(curocc());
		skip to AB3B;	//Should we tell that we already recorded the HoH?
	endif;


postproc

	if curocc() > 1 and $ = 1 then
		errmsg(tr(107), strip(lstrip(AB1(1))));
		reenter;
	endif;
	if $ = 1 then
		headName = AB1(curocc());
	endif;
	if curocc() > 1 then
		skip to AB4;
	endif;




PROC AB5

postproc

	//adding to relevant hhdemographic group
	if AB4 = 2 then
		if $ >= 15 then	//woman
			inc(hhDemographics(1));
			inc(hhDemographics(6));
		elseif $ <= 4 then	//little child
			inc(hhDemographics(5));
		else	//girl 5-15
			inc(hhDemographics(2));
		endif
	else
		if $ >= 16 then	//man
			inc(hhDemographics(3));
			inc(hhDemographics(6));
		elseif $ <= 4 then	//little child
			inc(hhDemographics(5));
		else		//boy
			inc(hhDemographics(4));
		endif;
	endif;

	// Children
	if $ >= 0 and $ < 16 then
		inc(hhDemographics(7));
	endif;


	//make a valueset for adult hh members as this too used frequently
	//NB: Checking in the Name field/AB3 field (When quitting filling in family members) if
	// there are any adults at all. If not: adding everybody aged 12+ there..
	if  $ >= 16 then	//Found an adult
		adultMembers.add(AB1,curocc());
	endif;


PROC AB6

preproc

	if AB5 < 15 then	//Keeping this limit for question about civil status despite grownups are 16+
		$ = 8;
		skip to AC1;
	endif;



PROC AC1

preproc

	if AB5 < 6 then //Only ask those 6  years and above for the rest of the section
		skip to next;
	endif;

	if getlanguage() = "EN" and country = "TZ" then
		setvalueset($,READ_EN_TZ);
	elseif getlanguage() = "SW" and country = "TZ" then
		setvalueset($,READ_TZ);
	elseif getlanguage() = "EN"  and country = "MZ" then
		setvalueset($,READ_EN_MZ);
	elseif getlanguage() = "PT"  and country = "MZ" then
		setvalueset($,READ_MZ);
	endif;


PROC AC2

	if $ = 2 then
		skip to A2;
	endif;



PROC AC3

	if $ = 2 then
		skip to AC7;
	endif;



PROC AC4

preproc

	if getlanguage() = "EN" and country = "TZ" then
		setvalueset($,EDUC_EN_TZ);
	elseif getlanguage() = "SW" and country = "TZ" then
		setvalueset($,EDUC_TZ);
	elseif getlanguage() = "EN"  and country = "MZ" then
		setvalueset($,EDUC_EN_MZ);
	elseif getlanguage() = "PT"  and country = "MZ" then
		setvalueset($,EDUC_MZ);
	endif;



PROC AC5

	if $ > AB5 or $ < AB5 - 1 then
		string theName = AB1(curocc());
		errmsg(tr(150),strip(lstrip(theName)),AB5);
		reenter;
	endif;


PROC AC6

	if $ = 1 then
		if AB4 = 2 then
			inc(schoolGirls);
		elseif AB4 = 1 then
			inc(schoolBoys);
		endif
	endif;
	skip to A2;


PROC AC7

preproc

	numeric currYear = sysdate("YYYY");

postproc

	if $ = 2 then
		skip to AC9;
	endif;



PROC AC8

preproc

	if getlanguage() = "EN" and country = "TZ" then
		setvalueset($,EDUC_EN_TZ);
	elseif getlanguage() = "SW" and country = "TZ" then
		setvalueset($,EDUC_TZ);
	elseif getlanguage() = "EN"  and country = "MZ" then
		setvalueset($,EDUC_EN_MZ);
	elseif getlanguage() = "PT"  and country = "MZ" then
		setvalueset($,EDUC_MZ);
	endif;

postproc

	if  $ > AC4(curocc()) then
		errmsg(tr(155), AC4(curocc()));
		reenter;
	endif;


PROC AC9

preproc

	if getlanguage() = "EN" and country= "TZ" then
		setvalueset($,EDUC_EN_TZ);

	elseif getlanguage() = "SW" and country= "TZ" then
		setvalueset($,EDUC_TZ);
	elseif getlanguage() = "PT" and country= "MZ" then
		setvalueset($,EDUC_EN_MZ);
	elseif getlanguage() = "PT" and country= "MZ" then
		setvalueset($,EDUC_MZ);
	endif;

postproc

	if  $ > AC4(curocc()) then
		errmsg(tr(156), AC4(curocc()));
		reenter;
	endif;


PROC A2

preproc

	if AB5 < 12 then
		skip to next;
	endif;

postproc

	if $ >= 15 then
		skip to A6;
	endif;


PROC A4

	if $ > 12 then
		errmsg(tr(108));
		reenter;
	endif;



PROC A5

	if $ > 31 then
		errmsg(tr(109));
		reenter;
	endif;


PROC A6

preproc

	if AB5 < 17 then
		skip to A8;
	endif;

postproc

	if $ >= 15 then
		skip to A8;
	endif;


PROC B1

preproc
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(179));
	endif;

postproc

	// can't live in community longer than age of the oldest person
	numeric k = 1;
	numeric highestAge = 0;
	while k <= 20 do
		if visualValue(ab5(k)) > highestAge then
			highestAge = visualValue(ab5(k));
		endif;
		inc(k);
	enddo;

	if $ > highestAge then
		errmsg(tr(157),highestAge);
		reenter;
	endif;


PROC B2

	if $ in 1,3,6 then
		skip to B4;
	endif;



PROC B4

	if $ = 1 then
		skip to B6;
	endif;



PROC B15

preproc

	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(180));
	endif;

postproc

	if $ = 2 then
		skip to B17;
	endif;



PROC B17

	if $ = 2 then
		skip to B19;
	endif;



PROC B20

	if $ = 2 then
		skip to C1_form;
	endif;


PROC C1

onfocus

	setValueset($, adultMembers);


PROC C2

preproc

	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(181));
	endif;
	energySources = 0;

postproc

	if $ = 2 then
		skip to C4;
	endif;
	if $ = 1 then
		inc(energySources);
	endif;


PROC C4

postproc

	if $ = 2 then
		skip to c6;
	endif;


PROC C5

	energySources = energySources + length(lstrip(strip($)));


PROC C6

postproc

	if $ = 1 then
		inc(energySources);
	endif;


PROC C7

postproc

	if $ = 1 then
		inc(energySources);
	endif;


PROC C8

postproc

	if $ = 1 then
		inc(energySources);
	endif;


PROC C9

postproc

	if $ = 1 then
		inc(energySources);
	endif;


PROC C10

preproc

	if energySources = 0 then
		skip to C12;
	endif;

	numeric i = 1;
	numeric code;
	string text;

	do while i < 9 ;
		if powerSources(i) = 0 then
			powerSources(i) = NOTAPPL;
		endif;
		inc(i);
	enddo;

	i = 0;

	if c2 = 1 then
		inc(i);
		code = 1;
		powerSources(i) = 1;
		powerSourcesLabels(i) =  getlabel($,code);
		//	  errmsg("%d, %d, %d, %s",i,C10,powerSources(i),powerSourcesLabels(i));
	endif;

	if c4 = 1 then
		if pos("a", c5) > 0 then
			inc(i);
			code = 3;
			powerSources(i) = 3;
			powerSourcesLabels(i) =  getlabel($,code);
			//	  errmsg("%d, %d, %d, %s",i,$,powerSources(i),powerSourcesLabels(i));
		endif;

		if pos("b", c5) > 0 then
			inc(i);
			code = 7;
			powerSources(i) = 7;
			powerSourcesLabels(i) =  getlabel($,code);
			//	  errmsg("%d, %d, %d, %s",i,$,powerSources(i),powerSourcesLabels(i));
		endif;

		if pos("c", c5) > 0 then
			inc(i);
			code = 8;
			powerSources(i) = 8;
			powerSourcesLabels(i) =  getlabel($,code);
			//	  errmsg("%d, %d, %d, %s",i,$,powerSources(7),powerSourcesLabels(i));
		endif;
	endif;

	if c6 = 1 then
		inc(i);
		code = 4;
		powerSources(i) = 4;
		powerSourcesLabels(i) =  getlabel($,code);
		//	  errmsg("%d, %d, %d, %s",i,$,powerSources(i),powerSourcesLabels(i));
	endif;

	if c7 = 1 then
		inc(i);
		code = 5;
		powerSources(i) = 5;
		powerSourcesLabels(i) =  getlabel($,code);
		//	  errmsg("%d, %d, %d, %s",i,$,powerSources(i),powerSourcesLabels(i));
	endif;

	if c8 = 1 then
		inc(i);
		code = 6;
		powerSources(i) = 6;
		powerSourcesLabels(i) =  getlabel($,code);
		//	  errmsg("%d, %d, %d, %s",i,$,powerSources(i),powerSourcesLabels(i));
	endif;

	if c9 = 1 then
		inc(i);
		code = 9;
		powerSources(i) = 9;
		powerSourcesLabels(i) =  getlabel($,code);
		//	  errmsg("%d, %d, %d, %s",i,$,powerSources(i),powerSourcesLabels(i));
	endif;

	// Only one source of electricity, hence no back up electricity
	if i = 1 then
		code = powerSources(i);
		$ = powerSources(i);
		c11 = 66;
		noinput;
		if code in 3, 7, 8 then
			solarDeviceType = powerSourcesLabels(i) ;
		endif;
		skip to c12;
	endif;

	//Final value in the powerSources array should be notappl
	powerSources(i+1) = NOTAPPL;
	setValueset($, powerSources, powerSourcesLabels);


postproc

	if $ in 3, 7, 8 then
		solarDeviceType = getvaluelabel($) ;
	endif;
	//	errmsg("energySources er %d",energySources);


PROC C11

preproc

	numeric code;
	if energySources = 1 then
		skip to C12;
	endif;

	// Take out the answer from C10 in the valueset
	  numeric i = 1;
	  numeric main = 0;
	do while i <= energySources-1 ;
		if powerSources(i) = C10 then
			main = 1;
		endif;
		if main = 1 then
			powerSources(i) = powerSources(i+1);
			powerSourcesLabels(i) = powerSourcesLabels(i+1);
		endif;
		inc(i);
	enddo;

	code = 66;
	powerSources(energySources) = 66;
	powerSourcesLabels(energySources) =  getlabel($,code);

	setValueset($, powerSources, powerSourcesLabels);



postproc

	if $ = c10 then
		errmsg(tr(151));
		reenter;
	endif;



PROC C13

preproc

	if c2 = 1 then
		skip to C16;
	endif;


PROC C14

	if $ in 2, 88 then
		skip to C2_FORM;
	endif


PROC C15

postproc

	skip to C2_FORM;


PROC C16

preproc

	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(174));
	endif;


PROC C17

	if $ > visualValue(B1) then
		errmsg(tr(123),B1);
		reenter;
	endif;


	if C16 = 1 then
		skip to C18;
	elseif C16 = 2 then
		skip to C38;
	endif;



PROC C23

	if $ = 1 then
		skip to C25;
	endif;
	if $ = 3 then
		skip to C28;
	endif;


PROC C25

postproc

	numeric	rangeStart = 5,
			rangeEnd = 150,
			rangeUnknown = 888;

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(tr(167),rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C26

postproc

	numeric	rangeStart = 1000,
			rangeEnd = 88887,
			rangeUnknown = 88888;

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(tr(167),rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C27

preproc

	if $ = 1 then
		skip to C33;
	endif;


PROC C28

	if $ = 66 then
		skip to C36;
	endif;




PROC C29

preproc

	if c27 = 1 then
		skip to C30;
	endif;


PROC C30

preproc

	if C27 = 1 then
		skip to C33;
	endif;


PROC C33

preproc

	if C27 <> 1 then
		skip to C36;
	endif;


PROC C38

	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;
	if $ = 24 then
		C39 = 4;
		skip to c40;
	endif


PROC C39

	if $ <> 88 and $ > 4 then
		errmsg(tr(111),4);
		reenter;
	endif;

	if $ > C38 then
		errmsg(tr(159), $, C38);
		reenter;
	endif;


PROC C40

	if $ in 0,66,88 then
		skip to C45;
	endif;



PROC C46

	if $ = 66 then
		//no problems
		skip to C48;
	endif;


PROC C47

	if $ = C46 then
		errmsg(tr(151));
		reenter;
	endif;


PROC C48

	if $ = 2 then
		skip to C50;
	endif;



PROC C50

preproc

	if C3 <> 2 then
		skip to C2_FORM;
	endif;


PROC C52

preproc

	if c51 = 2 then
		skip to C2_FORM;
	endif;


PROC C53

preproc

	If not(visualValue(C10) in 3, 7, 8) then
		skip to C89;
	endif;
	If (ispartial() and $ = "") or !ispartial() then
		errmsg(tr(176),strip(solarDeviceType));
	endif;


PROC C54

	if $ = 2 then
		skip to c56;
	endif;


PROC C56

postproc

	numeric rangeStart = 20,
			rangeEnd = 887,
			rangeUnknown = 888;

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(tr(167),rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C57

postproc

	numeric	rangeStart = 20,
			rangeEnd = 887,
			rangeUnknown = 888;

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(tr(167),rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C58

preproc

	if C56 in 20:887 and C57 in 20:887,889:900 then
		skip to C59;
	endif;

postproc

	numeric	rangeStart = 6,
			rangeEnd = 24,
			rangeUnknown = 88;

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(tr(167),rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C59

postproc

	numeric rangeStart = 200,
			rangeEnd = 10000,
			rangeUnknown = 88;

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(tr(167),rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C60

postproc

	if $ = 2 then
		skip to C62;
	endif;


PROC C61

postproc

	numeric rangeStart = 5,
			rangeEnd = 1500,
			rangeUnknown = 8888;

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(tr(167),rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C63

onfocus

	familyMembers.add(makeText(tr(110)), familyMembers.length() + 1);
	setValueset($, familyMembers);


PROC C64

	if $ = 1 then
		skip to C66
	elseif $ = 2 then
		skip to C73;
	endif;


PROC C65

	skip to C73;



PROC C66

	if $ = 1 then
		skip to C70;
	endif;



PROC C75

	if $ = 24 then
		C76 = 4;
		skip to c82;
	endif ;
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;


PROC C76

	if $ > 4 and $ <> 8 then
		errmsg(tr(111),4);
		reenter;
	endif;

	if $ > C75 then
		errmsg(tr(159), $, C75);
		reenter;
	endif;


PROC C80

	If C10 = 8 then
		skip to C83;
	endif;


PROC C83

	if $ = 2 then
		skip to C85;
	endif;


PROC C89

preproc

	if C10 <> 4 then
		skip to C4_FORM;
	endif;
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(177));
	endif;

postproc

	if $ = 2 then
		skip to C91;
	endif;



PROC C90

	if C89 = 2 then
		skip to C91;
	endif;



PROC C93

	if pos("q", $) > 0 and length(strip($)) > 1 then
		errmsg(tr(142));
		reenter;
	endif;


PROC C94

	if $ > 31 and $ <> 88 then
		errmsg(tr(111),31);
		reenter;
	endif;


PROC C96
postproc
	if $ = 3 then
		skip to C98;
	endif;
PROC C98

	if $ = 2 then
		skip to C100;
	endif;


PROC C102

	if $ = 2 then
		skip to C122;
	endif;



PROC C105

	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;

	if $ = 24 then
		C106 = 4;
		skip to c107;
	endif


PROC C106

	if $ > 4 then
		errmsg(tr(111),4);
		reenter;
	endif;

	if $ > C105 then
		errmsg(tr(159), $, C105);
		reenter;
	endif;


PROC C108

	if $ in 55,66 then
		skip to C110;
	endif;


PROC C109

	if $ = C108 then
		errmsg(tr(151));
		reenter;
	endif;


PROC C110

	if $ = 2 then
		skip to C4_FORM;
	endif;



PROC C111

	if $ <> 55 then
		skip to C4_FORM;
	endif;



PROC C112

preproc

	if C10 <> 6 then
		skip to C5_FORM;
	endif;
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(178));
	endif;



PROC C113

	if pos("q", $) > 0 and length(strip($)) > 1 then
		errmsg(tr(142));
		reenter;
	endif;



PROC C115

	if $ = 2 then
		skip to C117;
	endif;



PROC C116

	numeric rangeStart = 5,
			rangeEnd = 1500,
			rangeUnknown = 8888;

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(tr(167),rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C121

	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;



PROC C122

	if $ > 4 and $ <> 88 then
		errmsg(tr(111),4);
		reenter;
	endif;

	if $ > C121 then
		errmsg(tr(159), $, C121);
		reenter;
	endif;


PROC C123

postproc

	numeric rangeStart = 20,
			rangeEnd = 500,
			rangeUnknown = 888;

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(tr(167),rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C124

postproc

	numeric rangeStart = 6,
			rangeEnd = 24,
			rangeUnknown = 88;

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(tr(167),rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C125

postproc

	numeric rangeStart = 200,
			rangeEnd = 6000,
			rangeUnknown = 8888;

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(tr(167),rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C127

	if $ = C126 then
		errmsg(tr(151));
		reenter;
	endif;


PROC C128

preproc

	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(182));
	endif;

postproc

	if $ = 0 then
		skip to D_FORM;
	endif;



PROC C129

	if $ = 1 then
		skip to C134;
	endif;



PROC C130

	if $ = 1 then
		skip to C134;
	endif;



PROC C132

	if $ = 0 then
		skip to D_FORM;
	endif;



PROC D1

preproc

	If (visualValue(C10) = 1 or visualValue(C11) = 1) then
		skip to E_FORM;
	endif;
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(189));
	endif;

onfocus

	//Randomly select a percentage of price
	array thePercentages(2) = 0.5, 1;
	seed(systime());
	CF = round(thePercentages(random(1,2)) * gridPrice);

postproc

	if $ = 1 then
		skip to E_FORM;
	endif;


PROC D2

	if $ =  1 then
		skip to  E_FORM;
	endif;



PROC D3

	if $ =  1 then
		skip to E_FORM;
	endif;



PROC E_FORM

preproc

	if C10 = 3 or C11 = 3  then
		skip to G_FORM;
	endif;

	skip to E1;


PROC E1

preproc

	if (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		If (visualValue(C11) = 1 or visualValue(C10) = 1)  then
			errmsg(168);
		else
			errmsg(169);
		endif;
	endif;

onfocus

	//Randomly select a percentage of price
	array thePercentages(2) = 0.5, 1;
	seed(systime());
	CF = round(thePercentages(random(1,2)) * highDevicePrice);


postproc

	if $ = 1 then
		skip to G_FORM;
	endif;



PROC E2

	if $ = 1 then
		skip to G_FORM;
	endif;




PROC G_FORM

preproc

	if visualValue(C10) <> 9 then
		skip to F_FORM;
	endif;


PROC G1

preproc

	If (ispartial() and $ = "") or !ispartial() then
		errmsg(tr(175));
	endif;

postproc

	if pos("66", $) > 0 and length(strip($)) > 2 then
		errmsg(tr(118));
		reenter;
	endif;

	if pos("66", $) > 0  then
		//"none" is chosen
		skip to F_FORM;
	endif;



PROC G2A

onfocus

	string current = edit("99", curocc());

	//deal with "other" first
	if curocc() = 4 and pos("55", G1) > 0 then
		lampType = getLabel(G1, "55");
	else
		if  pos(current, G1) > 0 then
			lampType = getLabel(G1, current);
		else
			//Not chosen
			skip to next;
		endif;
	endif;


postproc

	if $ = 0 then
		errmsg(tr(124));
		reenter;
	endif;

	// Don't ask g2b and g2c for other devices
	if curocc() = 4 and pos("55", G1) > 0 then
		skip to G3;
	endif;


PROC G2C

	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;


PROC F1

onfocus

	if hhDemographics(6) < 1 or hhDemographics(6) in NOTAPPL, DEFAULT then //No adults in household
		skip to I_FORM;
	elseif not(schoolGirls > 0 or schoolBoys > 0) and C10 in 1,3,4 then
		skip to I_FORM;
	else
		setValueset($, adultMembers);
	endif;



PROC F2

onfocus

	if not(schoolGirls > 0 or schoolBoys > 0) then
		skip to F3;
	endif;



PROC F3

preproc

	if visualValue(C10) in 1,3,4 then
		skip to I_FORM;
	endif;

postproc

	lampType = getvaluelabel($);
	if $ = 1 then
		skip to F6;
	endif;
	if $ in 5,6,7 then
		skip to I_FORM;
	endif;


PROC F8

postproc

	if $ = 66 then
		skip to F10;
	endif;


PROC F9

postproc

	if $ = F8 then
		errmsg(tr(151));
		reenter;
	endif;


PROC F11

preproc

	if F3 = 1 then
		skip to I_FORM;
	endif;

postproc

	if $ = 7 then
		skip to I_FORM;
	endif;



PROC I1

preproc

	//Find the person who cooks most often. That's the one with the lowest value of A8 (see valueset for reason why)..
	numeric idx = 2;
	PersonCooksMostOften = 1;
	while idx <= 20 do
		if visualValue(A8(idx)) <> NOTAPPL and visualValue(A8(idx)) < visualValue(A8(PersonCooksMostOften)) then
			PersonCooksMostOften = idx;
		endif;
		inc(idx);
	enddo;

	$ = PersonCooksMostOften;


onfocus

	//Strip away the extra "family member" added earlier
	if familyMembers.labels(familyMembers.length()) = MakeText(tr(110)) then
		familyMembers.remove(familyMembers.length());
	endif;
	setValueset($, familyMembers);

postproc

	personCooksMostOften = $;


PROC I2

preproc

	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(196));
	endif;

postproc

	if $ = 2 then
		skip to i4;
	endif;


PROC I3

	if $ = "" then
		errmsg(tr(170));
		reenter;
	endif;


PROC I4

	if $ = 2 then
		skip to i6;
	endif;


PROC I5

	if $ = "" then
		errmsg(tr(170));
		reenter;
	endif;


PROC I6

	if $ = 2 then
		skip to i8;
	endif;


PROC I7

	if $ = "" then
		errmsg(tr(170));
		reenter;
	endif;


PROC I8

	if $ = 2 then
		skip to i10;
	endif;


PROC I9

	if $ = "" then
		errmsg(tr(170));
		reenter;
	endif;


PROC I10

preproc

	if i2 = 2 and i4 = 2 and i6 = 2 and i8 = 2 then // Have no stoves at all
		skip to O_FORM
	endif;
	array numeric cookstoves(18);
	array string cookstovesLabels(18);
	array string cookstovesImages(18);
	numeric i = 1;
	numeric j = 1;
	string stove;

	if i3 <> '' then
		do while i3[i:3] <> ''
			cookstoves(j) = tonumber(i3[i:3]);
			cookstovesLabels(j) =  getvaluelabel(i3[i:3]);
			cookstovesImages(j) =  concat("..\Images\Cookstoves_",i3[i:3],".jpg");
			i = i + 3;
			j = j + 1;
			//      errmsg("B Cook %d %s, i %d, Image: %s",cookstoves(j-1),cookstovesLabels(j-1),i,cookstovesImages(j-1));
		enddo;
	endif;

	i = 1;
	if i5 <> '' then
		do while i5[i:3] <> ''
			cookstoves(j) = tonumber(i5[i:3]);
			cookstovesLabels(j) =  getvaluelabel(i5[i:3]);
			cookstovesImages(j) =  concat("..\Images\Cookstoves_",i5[i:3],".jpg");
			i = i + 3;
			j = j + 1;
			//      errmsg("D Cook %d %s, i %d",cookstoves(j-1),cookstovesLabels(j-1),i);
		enddo;
	endif;

	i = 1;
	if i7 <> '' then
		do while i7[i:3] <> ''
			cookstoves(j) = tonumber(i7[i:3]);
			cookstovesLabels(j) =  getvaluelabel(i7[i:3]);
			cookstovesImages(j) =  concat("..\Images\Cookstoves_",i7[i:3],".jpg");
			i = i + 3;
			j = j + 1;
			//      errmsg("F Cook %d %s, i %d",cookstoves(j-1),cookstovesLabels(j-1),i);
		enddo;
	endif;

	i = 1;
	if i9 <> '' then
		do while i9[i:3] <> ''
			cookstoves(j) = tonumber(i9[i:3]);
			cookstovesLabels(j) =  getvaluelabel(i9[i:3]);
			cookstovesImages(j) =  concat("..\Images\Cookstoves_",i9[i:3],".jpg");
			i = i + 3;
			j = j + 1;
			//      errmsg("H Cook %d %s, i %d",cookstoves(j-1),cookstovesLabels(j-1),i);
		enddo;
	endif;

	i = 1;
	do while i < 18;
		if cookstoves(i) = 0 then
			cookstoves(i) = NOTAPPL;
			//      errmsg("Nulling Cook %d %s",cookstoves(j-1),cookstovesLabels(j-1));
		endif;
		i = i + 1;
	enddo;
	setValueset($, cookstoves, cookstovesLabels, cookstovesImages);



PROC I11

preproc

	if lstrip(strip(i3)) = "101" then
		$ = 4;
		skip to I18;
	endif;

postproc

	if $ = 3 then
		skip to i14;
	endif;
	if $ = 4 then
		skip to i18;
	endif;


PROC I12

onfocus

	setValueset($, familyMembers);

postproc

	if $ <> PersonCooksMostOften then
		personDecideToBuyStove = concat(", ",tr(198)," ",familyMembers.Labels($)," (",tr(199),")");
	else
		personDecideToBuyStove = "";
	endif;


PROC I13

postproc

	skip to i15;


PROC I23

	If not((I22 in 1,2,3 or $ in 1,2,3) and (I2=1 or I4=1 or I6=1)) then
		skip to I25;
	endif;


PROC I25

	If $ in 18, 99, 55 then
		skip to I29 ;
	endif;
	If $ in 13 then
		skip to I37 ;
	endif;


PROC I26

postproc

	if $ = i25 then
		errmsg(tr(151));
		reenter;
	endif;
	If $ in 13, 18, 99, 55 then
		skip to I29 ;
	endif;


PROC I28

preproc

	if i26 in 13, 18, 55, 99 then
		skip to i29;
	endif;


PROC I29

preproc

	If I25 in 3,8,17 then
		skip to I34;
	endif;


PROC I30


postproc



PROC I41

	if $ = 2 then
		skip to i43;
	endif;


PROC I43

preproc

	if not(I25 in 2,3 or I26 in 2,3) then
		skip to i46;
	endif;
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(171));
	endif;

postproc

	if $ = 0 then
		skip to I46;
	endif;


PROC I45_MM

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;



PROC I46

preproc

	if not((visualValue(I25) in 2,3,4,7,8,9,10,11,12,14,17
		or visualValue(I26) in 2,3,4,7,8,9,10,11,12,14,17)
		AND (visualValue(I22) in 1,2,3 or visualValue(I23) in 1,2,3)) then
		skip to O_FORM;
	endif;

	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(195));
	endif;

postproc

	if $ = 2 then
		skip to I48;
	elseif $ = 3 then
		skip to I50;
	elseif $= 4 then
		skip to I51;
	endif;



PROC I47

	skip to I52;



PROC I49

	skip to I52;



PROC I50

	skip to I52;



PROC I52

	if $ = 4 then
		skip to I54;
	endif;


PROC O_FORM


PROC O1

preproc

	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(183), familyMembers.Labels(PersonCooksMostOften));
	endif;

onfocus

	if I1 <> notappl then
		$ = visualValue(I1);
	else
		$ = personCooksMostOften;
	endif;

	noinput;




PROC O6

preproc

	if O2 = 2 and O3 = 2 and O4 = 2 and O5 = 2 then
		skip to O7;
	endif;



PROC O7

preproc

	if hhDemographics(7) > 0 then
		seed(systime());
		numeric x, i = 1, curr = 1;
		x = random(1, hhDemographics(7));

		//Loop through family arrays to find child number x
		while i < 20 do
			if visualValue(AB5(i))	 <= 15 then	//child
				if curr = x then	//right child
					chosenChildName = ab1(i);
					$ = i;
					exit;
				else
					inc(curr);
				endif;
			endif;
			inc(i);
		enddo;

		skip to O8;
	else
		skip to K_FORM;
	endif;


PROC O8

preproc

	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(193),chosenChildName);
	endif;


PROC O12

preproc

	if O8 = 2 and O9 = 2 and O10 = 2 and O11 = 2 then
		skip to K_FORM;
	endif;


PROC K_FORM

preproc

	if not(visualValue(I10) in 101,102,201) then
		skip to J_FORM;
	endif;


PROC K1

preproc

	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(190));
	endif;

	string woodOrCharcoal;
	numeric tmp;
	seed(systime());

	//Finding out how to skip and setting variables
	if visualValue(I10) in 101,102  then
		woodOrCharcoal = "wood";
		tmp = random(1,2);	//The two first elements of the cookStove array are wood..
	elseif visualValue(I10) = 201 then
		woodOrCharcoal = "charcoal";
		tmp = random(3,4);
	endif;

	cookType = cookStove(tmp);
	CF = round(random(1,3) * cookStovePrices(tmp)/3);	//this gives 0.33, 0.66 or 1 of the price of the randomly chosen cookstove


onfocus

	if woodOrCharcoal = "" then
		skip to J_FORM;
	endif;

	setValueset($, adultMembers);




PROC K2

	if $ = 1 then
		skip to J_FORM;
	endif;


PROC K3

	if $ = 1 then
		skip to J_FORM;
	endif;


PROC J1

preproc

	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(197));
	endif;

postproc

	if $ = 2 then
		skip to J3;
	endif;



PROC J3

	if $ = 2 then
		skip to L_FORM;
	endif;



PROC J4

	if $ <> 6 then
		skip to L_FORM;
	endif;



PROC L1

onfocus

	setValueset($, adultMembers);



PROC L2

preproc

	//Skip if they have no lightbulbs
	if curocc() < 11 and curocc() > 6 and L2A(6) = 2 then
		skip to next;
	endif;
	// categories 7-9 only for households with electricity as main or back-up source
	if not(visualValue(C10) in 1,3,4,5,7 or visualValue(C11) in 1,3,4,5,7) and curocc() in 7:9 then
		skip to next;
	endif;

	// categories 10-19 only for households with electricity as main or back-up source
	if not(visualValue(C10) in 1,3,4,5 or visualValue(C11) in 1,3,4,5) and curocc() in 10:19 then
		skip to next;
	endif;

	// categories 20-22 only for households with electricity as main or back-up source
	if not(visualValue(C10) in 1,3,4,5,7 or visualValue(C11) in 1,3,4,5,7) and curocc() in 20:22 then
		skip to next;
	endif;

	$ = curocc();
	skip to L2A;




PROC L2A

onfocus

	if curocc() in 20:22 then
		hhItemExtra = makeText(tr(148));
		setValueset(L2A,L2A_NUMBER);
	else
		hhItemExtra = "";
		setValueset(L2A,L2A_YESNO);
	endif;

postproc

	if !(curocc() in 9,22) then
		skip to L2C;
	elseif curocc() = 9 and $ = 2 then
		skip to L2C;
	elseif curocc() = 22 and $ = 0 then
		skip to L2C;
	endif;


PROC L2B

	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;


PROC L2C

preproc

	// 7c-9c only for those that had grid electricity 5 years ago C12 in (1,2,3,4,5,7)
	if not(visualValue(C12) in 1,2,3,4,5,7) and curocc() in 7:9 then
		skip to next;
	endif;

	// categories 10-19 only for households with electricity as main or back-up source
	if not(visualValue(C10) in 1,3,4,5 or visualValue(C11) in 1,3,4,5) and curocc() in 10:19 then
		skip to next;
	endif;

	// categories 20-22 only for households with electricity as main or back-up source
	if not(visualValue(C10) in 1,3,4,5,7 or visualValue(C11) in 1,3,4,5,7) and curocc() in 20:22 then
		skip to next;
	endif;



PROC L5

	if $ = 2 then
		skip to M_FORM;
	endif;



PROC M1

preproc

	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(200));
	endif;

postproc

	if $ = 2 then
		skip to M3;
	endif




PROC N_ACTIVITY_WOMEN

preproc

	if hhDemographics(1) < 1 then
		skip to N_ACTIVITY_GIRLS;
	endif;

	If curocc() = 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(tr(172));
	endif;


	If curocc() = 1 and (((ispartial() and visualValue($) = NOTAPPL) or !ispartial())) then
		errmsg(tr(184));
	endif;

	$ = curocc();
	noinput;


PROC N_A

postproc

	if $ > hhDemographics(1) then
		errmsg(tr(166),$,hhDemographics(1));
		reenter;
	endif;
	if $ > 0 then
		skip to N_C_HH;
	endif;


PROC N_B

postproc

	skip to next;


PROC N_C_HH

postproc

	if $ > 24 then
		errmsg(tr(161), $);
		reenter;
	endif;


PROC N_C_MM

postproc

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_C_HH = 24 and $ > 0 then
		errmsg(tr(163), N_C_HH, $);
		reenter;
	endif;


PROC N_D_HH

	if $ > 15 then
		errmsg(tr(162), $);
		reenter;
	endif;

	if $ > N_C_HH then
		errmsg(tr(159), $, N_C_HH);
		reenter;
	endif;


PROC N_D_MM

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_D_HH = 15 and $ > 0 then
		errmsg(tr(164), N_D_HH, $);
		reenter;
	endif;

	if N_C_HH = N_D_HH and $ > N_C_MM  then
		errmsg(tr(160), N_D_HH, $, N_C_HH, N_C_MM);
		reenter;
	endif;


PROC N_ACTIVITY_GIRLS

preproc

	if hhDemographics(2) < 1 then
		skip to N_ACTIVITY_MEN;
	endif;

	If curocc() = 1 and hhDemographics(1) < 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(tr(172));
	endif;

	If curocc() = 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(tr(185));
	endif;
	$ = curocc();
	noinput;


PROC N_F

preproc

	if N_ACTIVITY_GIRLS = 6 and not(schoolGirls > 0) then
		N_ACTIVITY_GIRLS = NOTAPPL;
		skip to next;
	endif;

postproc

	if $ > hhDemographics(2) then
		errmsg(tr(166),$,hhDemographics(2));
		reenter;
	endif;
	if $ > 0 then
		skip to N_H_HH;
	endif;


PROC N_G

postproc

	skip to next;


PROC N_H_HH

postproc

	if $ > 24 then
		errmsg(tr(161), $);
		reenter;
	endif;


PROC N_H_MM

postproc

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_H_HH = 24 and $ > 0 then
		errmsg(tr(163), N_H_HH, $);
		reenter;
	endif;


PROC N_I_HH

	if $ > 15 then
		errmsg(tr(162), $);
		reenter;
	endif;

	if $ > N_H_HH then
		errmsg(tr(159), $, N_H_HH);
		reenter;
	endif;


PROC N_I_MM

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_I_HH = 15 and $ > 0 then
		errmsg(tr(164), N_I_HH, $);
		reenter;
	endif;

	if N_H_HH = N_I_HH and $ > N_H_MM  then
		errmsg(tr(160), N_I_HH, $, N_H_HH, N_H_MM);
		reenter;
	endif;


PROC N_ACTIVITY_MEN

preproc

	if hhDemographics(3) < 1 then
		skip to N_ACTIVITY_BOYS;
	endif;
	If curocc() = 1 and hhDemographics(1) < 1 and hhDemographics(2) < 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(tr(172));
	endif;

	If curocc() = 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(tr(186));
	endif;
	$ = curocc();
	noinput;


PROC N_K

postproc

	if $ > hhDemographics(3) then
		errmsg(tr(166),$,hhDemographics(3));
		reenter;
	endif;
	if $ > 0 then
		skip to N_M_HH;
	endif;


PROC N_L

postproc

	skip to next;


PROC N_M_HH

postproc

	if $ > 24 then
		errmsg(tr(161), $);
		reenter;
	endif;


PROC N_M_MM

postproc

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_M_HH = 24 and $ > 0 then
		errmsg(tr(163), N_M_HH, $);
		reenter;
	endif;


PROC N_N_HH

	if $ > 15 then
		errmsg(tr(162), $);
		reenter;
	endif;

	if $ > N_M_HH then
		errmsg(tr(159), $, N_M_HH);
		reenter;
	endif;


PROC N_N_MM

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_N_HH = 15 and $ > 0 then
		errmsg(tr(164), N_N_HH, $);
		reenter;
	endif;

	if N_M_HH = N_N_HH and $ > N_M_MM  then
		errmsg(tr(160), N_N_HH, $, N_M_HH, N_M_MM);
		reenter;
	endif;


PROC N_ACTIVITY_BOYS

preproc

	if hhDemographics(4) < 1 then
		skip to Q_FORM;
	endif;
	If curocc() = 1 and hhDemographics(1) < 1 and hhDemographics(2) < 1 and hhDemographics(3) < 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(tr(172));
	endif;

	If curocc() = 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(tr(187));
	endif;
	$ = curocc();
	noinput;
	skip to N_P;


PROC N_P

preproc

	if N_ACTIVITY_BOYS = 6 and not(schoolBoys > 0) then
		N_ACTIVITY_BOYS = NOTAPPL;
		skip to next;
	endif;

postproc

	if $ > hhDemographics(4) then
		errmsg(tr(166),$,hhDemographics(4));
		reenter;
	endif;
	if $ > 0 then
		skip to N_R_HH;
	endif;


PROC N_Q

postproc

	skip to next;


PROC N_R_HH

postproc

	if $ > 24 then
		errmsg(tr(161), $);
		reenter;
	endif;


PROC N_R_MM

postproc

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_R_HH = 24 and $ > 0 then
		errmsg(tr(163), N_R_HH, $);
		reenter;
	endif;


PROC N_S_HH

	if $ > 15 then
		errmsg(tr(162), $);
		reenter;
	endif;

	if $ > N_R_HH then
		errmsg(tr(159), $, N_R_HH);
		reenter;
	endif;


PROC N_S_MM

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_S_HH = 15 and $ > 0 then
		errmsg(tr(164), N_S_HH, $);
		reenter;
	endif;

	if N_R_HH = N_S_HH and $ > N_R_MM  then
		errmsg(tr(160), N_S_HH, $, N_R_HH, N_R_MM);
		reenter;
	endif;


PROC Q1

onfocus

	$ = 1;
	setValueset($, adultMembers);

postproc

	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(tr(188));
	endif;


PROC Q2_NUM

onfocus

	$ = curocc();
	skip to Q2A;


PROC Q7

preproc

	if not(schoolGirls > 0 or schoolBoys > 0) then
		skip to Q8;
	endif;


PROC S_FORM


PROC S1

onfocus

	//	Adult person
		setValueset($, adultMembers);


PROC S2

preproc

	If not(visualValue(C2) = 1 or visualValue(C4) = 1 or visualValue(C6) = 1 or
		visualValue(C7) = 1 or visualValue(C8) = 1 or visualValue(C9) = 1) then
		skip to S3;
	endif;


PROC U1

onfocus

	//	Adult person
		setValueset($, adultMembers);



PROC U2

onfocus

	$ = curocc();
	skip to U2A;


PROC U2A

postproc

	if $ = 1 then
		skip to u2c;
	endif;


PROC U2B

postproc

	skip to next;



PROC U2C

onfocus

	//Value set with extra adult person.
	if adultMembers.Labels(adultMembers.length()) <> makeText(tr(110)) then
		adultmembers.add(makeText(tr(110)), adultMembers.length() + 1);
	endif;
	setValueset($, adultMembers);


PROC U3

onfocus

	$ = curocc();
	skip to U3A;


PROC U3A

postproc

	if $ = 1 then
		skip to U3C;
	endif;


PROC U3B

postproc

	skip to next;


PROC U3C

onfocus

	setValueset($, adultMembers);



PROC T1

preproc

	if hhDemographics(1) < 1 or hhDemographics(1) in NOTAPPL, DEFAULT then //No women in household
		skip to W_FORM;
	else
		//Setting varible for suggestion on who to interview
		numeric i = 1;
		while i <= 20 do
			if	visualValue(ab3(i)) = 1 and visualValue(ab4(i)) = 2 then
				femaleHeadName = strip(ab1(i));
			endif;

			if visualValue(ab3(i)) = 2 and visualValue(ab4(i)) = 2 then
				femaleSpouseName = strip(ab1(i));
			endif;
			inc(i);
		enddo;
	endif;

onfocus

	valueSet womenVSet;

	//Loop through household memebers to find women
	numeric i = 1;
	while i <= 20 do
		if AB1(i) = "" then
			//finished.
			break;
		else
			if  visualValue(AB4(i)) = 2 and visualValue(AB5(i)) >= 16 then	//Found a woman
				womenVSet.add(AB1(i), i);
			endif;
			inc(i);
		endif;
	enddo;

	//Adding option that no women currently are available
	womenVSet.add(makeText(tr(201)), i);
	setValueset($, womenVSet);


postproc

	if $ = womenVSet.length() then
		skip to W_FORM;
	endif;


PROC W1

onfocus

	if hhDemographics(1) < 1 or hhDemographics(1) in NOTAPPL, DEFAULT then //No women in household
		skip to GP_FORM;
	else
		If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
			errmsg(tr(147));
		endif;
		$ = T1;
		skip to W2_NO;
	endif;



PROC W2_NO

preproc

	$ = curocc();
	skip to W2A;



PROC GP1

postproc

	if $ = 2 then
		skip to GP5;
	endif;


PROC GP_MEM

preproc

	// Applicable for persons 12 years and above
	array string Persons12AndAboveNos(20);	//Multiple choice. Needs to be string
	array String Persons12AndAboveNames(20);
	numeric i = 1, k = 0;
	while i <= 20 do
		if visualValue(AB5(i)) >= 12 then
			persons12AndAboveNos(k) = maketext("%02d",i);
			persons12AndAboveNames(k) = AB1(i);
			inc(k);
		endif;
		inc(i);
	enddo;
	setValueset($, persons12AndAboveNos, persons12AndAboveNames);


PROC GP2

preproc

	$ = GP_MEM[(curocc()*2)-1:2];
	if $ <> "" then
		skip;
	else
		skip to next;
	endif;


PROC GP18

postproc

	if $ = 1 then
		skip to GP20;
	endif;


PROC GP20

postproc

	if $ = 2 then
		skip to GP23;
	endif;


PROC GP24

preproc

	if GP23 = 2 then
		skip to GP25;
	endif;


PROC GP27

preproc

	if pos("1", GP26) = 0 then
		skip to GP28;
	endif;


PROC GP28

preproc

	if pos("2", GP26) = 0 then
		skip to GP29;
	endif;


PROC GP29

preproc

	if pos("3", GP26) = 0 then
		skip to GP30;
	endif;


PROC GP30

preproc

	if pos("4", GP26) = 0 then
		skip to GP31;
	endif;


PROC GP31

preproc

	if pos("5", GP26) = 0 then
		skip to GP32;
	endif;


PROC GP32

preproc

	if pos("6", GP26) = 0 then
		skip to GP33;
	endif;


PROC GP34

preproc

	if pos("1", GP33) = 0 then
		skip to GP35;
	endif;


PROC GP35

preproc

	if pos("2", GP33) = 0 then
		skip to GP36;
	endif;


PROC GP36

preproc

	if pos("3", GP33) = 0 then
		skip to GP37;
	endif;


PROC GP37

preproc

	if pos("4", GP33) = 0 then
		skip to GP38;
	endif;


PROC GP38

preproc

	if pos("5", GP33) = 0 then
		skip to GP39;
	endif;


PROC GP39

preproc

	if pos("6", GP33) = 0 then
		skip to GP40;
	endif;


PROC X1

preproc

	if visualValue(c128) < 1 then
		skip to AA_END_FORM;
	endif;

postproc

	if $ = 2 then
		skip to AA_END_FORM;
	endif;


PROC AA20

preproc

	$ = AALOGIN;
	noinput;


