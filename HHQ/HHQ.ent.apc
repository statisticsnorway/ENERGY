{Application 'HHQ' logic file generated by CSPro}

PROC GLOBAL

	//Country specific variables
	numeric gridPrice = 3700;	//country specific price to connect to the grid
	numeric highDevicePrice = 5000;//Country specific prices for solar devices
	
	//NB: When filling the following array with country specific cookstoves
	//Please notice that the order is important: The two first elements should be wood stoves, the to last charcoal!
	array String cookstove(4) = "COUNTRY SPECIFIC Aspirational wood ICS",
								"LOCALLY AVAILABLE, popular affordable wood ICS",
								"COUNTRY SPECIFIC Aspirational charcoal ICS",
								"LOCALLY AVAILABLE, popular affordable charcoal ICS";
	array cookStovePrices(4) = 2100,700,2100,700;	//Reference prices for the above defined cookStoves
	

	//Variables to use in the CAPI question. Has to be globally declared
	string currMember;	
	string solarDeviceType;
	string mainElSource;
	string lampType;
	numeric CF;
	string fuelType;
	string cookType;
	string hhItem;
	string hhItemExtra;
	string hhChore;
	string hhChoreGroup;
	string livelyhood;
	string socAndSec;
	string healthQuestion;
	string consumeItem;
	numeric years;
	
	//GPS stuff
	numeric gpsN, gpsE;

	
	Array memberNumbers(20);	//Keeping the HH member codelists all through the system as they are used frquently
	Array String memberNames(20);

	array hhDemographics(5) = 0,0,0,0,0;	//splitting household in age and gender groups. To facilitate skipping
											//element 1 = #women, 2 = #girls, 3 = #men, 4 = #boys, 5 = #children under 5



	//function to strip leading spaces (the original strip function only strips trailing spaces)
	function string lstrip(string theString)
		numeric aPos = pos(" ", theString);
		while aPos = 1 do
			//leading space
			theString = theString[2];
			aPos = pos(" ", theString);
		enddo;
		lstrip = theString;
	end;
	
	function onStop()
		savepartial();
		stop(1);
	end;



PROC HHQ_FF


PROC HHQ_QUEST
preproc

	//Have to fill the arrays for the HH members if the questionnaire is partially saved.
	if ispartial() then
		numeric memNum = totocc(AB_HOUSEHOLD_MEMBERS_REC);
	
		numeric i = 1;
		while i <= memNum do
			memberNumbers(i) = i;
			memberNames(i) = AB1(i);
			
			//adding to relevant hhdemographic group			
			if AB4(i) = 2 then
				if AB5(i) > 14 then	//woman
					inc(hhDemographics(1));
				elseif AB5(i) <=4 then	//little child
					inc(hhDemographics(5));
				else	//girl
					inc(hhDemographics(2));
				endif
			else
				if AB5(i) > 14 then	//man
					inc(hhDemographics(3));
				elseif AB5(i) <= 4 then	//little child
					inc(hhDemographics(5));
				else		//boy
					inc(hhDemographics(4));
				endif;
			endif;
			
			inc(i);
		enddo;
		memberNumbers(i) = NOTAPPL;
		
		//Need to find the name of the current respondent if we're still registering hh members
		string currField = getSymbol(savepartial);
		if currField[1:2] = "AB" or currField[1:2] = "AC" 
				or currField in "A2","A3","A4","A5","A6","A7","A8" then
			numeric currNo;
			if length(currField) = 6 then
				currNo = tonumber(currField[5:1]);
			else
				currNo = tonumber(currField[4:1]);
			endif;
			currMember = AB1(currNo);
		endif; 
	endif;				
	
	string language = sysparm(language);
	setLanguage(language);

postproc
	stop(1);
PROC AA1
preproc
	seed(systime());
//	AA1 = random(1,999);
    AA1 = toNumber(sysparm("STATE"));
	noinput;



PROC AA2
preproc
	AA2 = toNumber(sysparm("COUNTY"));
	noInput;



PROC AA3
preproc
	AA3 = toNumber(sysparm("SUBCOUNTY"));
	noinput;



PROC AA3_1
preproc
	AA3_1 = toNumber(sysparm("VILLAGE"));
	noinput;


PROC AA4
preproc
	AA4 = toNumber(sysparm("EA"));
	noinput;


PROC AA5
preproc
	AA5 = toNumber(sysparm("SERIAL"));
	noinput;
	
	


PROC DEVICE_ID
preproc
	DEVICE_ID = sysparm("DEVICE");
	noinput;



PROC AA15
preproc
	//Look up value in sample file
	SA1 = AA1; SA2 = AA2; SA3 = AA3; SA3_1 = AA3_1; SA4 = AA4; SA8 = AA5;
	SDEVICE_ID = DEVICE_ID;
	numeric ok = loadcase(SAMPLING_DICT, SDEVICE_ID, SA1, SA2, SA3, SA3_1, SA4, SA8);
	AA15 = SA9;
	ADDRESS_LOCATION = SA5;
	noinput;



PROC ADDRESS_LOCATION
preproc
	noinput;




PROC AA8
preproc
	AA8 = toNumber(sysparm("URBANRURAL"));
	noinput;


PROC AA09
preproc
    skip to AA11;
	
	
	//Look up value in sample file
	SA1 = AA1; SA2 = AA2; SA3 = AA3; SA3_1 = AA3_1; SA4 = AA4; SA8 = AA5;
	SDEVICE_ID = DEVICE_ID;
	numeric ok = loadcase(SAMPLING_DICT, SDEVICE_ID, SA1, SA2, SA3, SA3_1, SA4, SA8);
			
	if $ = 1 then
		gps(open); // on Android
		//gps(open,3,4800); // on a laptop or Windows tablet; COM3, 4800baud

		if gps(read,60) then // a successful attempt at a read, for up to 60 seconds
		
			if ok then
				gpsN = gps(latitude);		//north
				gpsE = gps(longitude);		//east
				numeric dist = gps(distance, gpsN, SA6, gpsE, SA7);
				string what = prompt(maketext(tr(105), dist), numeric);
				if what = "2" then
					//Too far from the coordinates of the listing.. Quitting..
					stop(1);
				endif;
			else
			   errmsg(tr(106));
		  	endif;

		endif;

		gps(close);
	else		//Just import from sample file
		gpsN = SA6;
		gpsE = SA7;
	endif;
	



PROC AA9
preproc
	$ = gpsN;
	noinput;
	
	
	
PROC AA10
preproc
	$ = gpsE;
	noinput;
	
PROC AA11
	
preproc
		$ = edit("99-99-99",sysdate("YYDDMM"));
		skip to AA12;



PROC AA12
preproc
	currMember = AA15;
	
postproc
	if $ = 1 then //interview OK
		skip to AA16;	
	elseif $ = 2 then
		skip to AA13A;
	elseif $ = 3 then
		//Normal flow - why refuse
	else	//House is vacant. Going to end
		skip to AA20;
	endif;



PROC AA12_1
	skip to AA20;


PROC AA14
	skip to AA20;



PROC AA16
preproc
	if not ispartial() then
		currMember = AA15;
	endif;
	
	
postproc
	if $ = 2 or $ = 3 then
		skip to AA18;
	endif;



PROC AA18
	if $ = 1 then
		skip to HHNAMES;
	endif;



PROC AA19
	skip to HHNAMES;



PROC AB1
preproc
	//Might as well fill in HoH and Main respondent
	if curocc() = 1 then
		$ = AA15;
	elseif curocc() = 2 then
		$ = AA19;
	endif;
	
	
postproc
    if $ = "" and curocc() = 1 then
     errmsg(tr(158));
     reenter;
    endif;

	if $ = "" then	//finished
		memberNumbers(curocc()) = NOTAPPL; //this is to indicate the end of the valueset
		skip to AB_AC_FORM; 
	endif;


	//make a valueset for hh members as this question is asked frequently
	memberNumbers(curocc()) = curocc();
	memberNames(curocc()) = $;
	
				
		

	


PROC AB3
onfocus

	currMember = AB1(curocc());
	if currMember = "" then
		skip to B_FORM;	//Finished with all family members
	endif;
	
	//Setting HoH as I already know that
	if curocc() = 1 then
		$ = 1;
		skip to AB4;	//Should we tell that we already recorded the HoH?
	endif;

postproc
	if curocc() > 1 and $ = 1 then
		errmsg(tr(107), strip(lstrip(AB1(1))));
		reenter;
	endif;



PROC AB4

PROC AB5
	//adding to relevant hhdemographic group
	if AB4 = 2 then
		if $ > 14 then	//woman
			inc(hhDemographics(1));
		elseif $ <=4 then	//little child
			inc(hhDemographics(5));
		else	//girl
			inc(hhDemographics(2));
		endif
	else
		if $ > 14 then	//man
			inc(hhDemographics(3));
		elseif $ <= 4 then	//little child
			inc(hhDemographics(5));
		else		//boy
			inc(hhDemographics(4));
		endif;
	endif;
	



PROC AB6
preproc
	if AB5 < 12 then
		$ = 8;
		skip to AC1;
	endif;
	
	
	
PROC AC1
preproc
	if AB5 < 6 then //Only ask those 6  years and above for the rest of the section
		skip to next;
	endif;


	
	
	
PROC AC2
	if $ = 2 then
		skip to A2;
	endif;



PROC AC3
	if $ = 2 then
		skip to AC7;
	endif;



PROC AC5
    if $ > AB5 or $ < AB5 -1 then
		errmsg(tr(150),strip(lstrip(currMember)),AB5);
		reenter;
	endif;
 
PROC AC6
preproc
	if AB5(curocc()) > 17 then	//less than 17 years
		skip to A8;
	endif;	
PROC AC7
preproc
	numeric currYear = sysdate("YYYY");
	
	

postproc
	if $ = 2 then
		skip to AC9;
	endif;



PROC AC8
postproc
	if  $ > AC4(curocc()) then
		errmsg(tr(155), AC4(curocc()));
		reenter;
	endif;

PROC AC9
postproc
	if  $ > AC4(curocc()) then
		errmsg(tr(156), AC4(curocc()));
		reenter;
	endif;
PROC A2
preproc
	if AB5 < 12 then
		skip to next;
	endif;
	
postproc
	if $ >= 15 then
		skip to A6;
	endif;
	

PROC A4
	if $ > 12 then
		errmsg(tr(108));
		reenter;
	endif;



PROC A5
	if $ > 31 then
		errmsg(tr(109));
		reenter;
	endif;


PROC A6
preproc
    if AB5 < 17 then
      skip to A8;
    endif;
postproc
	if $ >= 15 then
		skip to A8;
	endif;
PROC B2
 // should be the oldest person, not the first
	if $ > AB5(1) then
		errmsg(tr(157),AB5(1));
		reenter;
	endif;
PROC B3
//	skip to W_FORM;

	if $ in 1,3,6 then
		skip to B5;
	endif;



PROC B5
	if $ = 1 then
		skip to B7;
	endif;



PROC B17
	if $ = 2 then
		skip to B19;
	endif;



PROC B19
	if $ = 2 then
		skip to B21;
	endif;



PROC B23
	if $ = 2 then
		skip to C1_form;
	endif;


PROC C1
onfocus
	setValueset(C1, memberNumbers, memberNames);
	
postproc
	//Need to add an item to the household menbers array to cover for person not in household anymore
	//This is needed for all C sections. To be removed
	numeric i = 0;
	while i < 20 do
		if memberNumbers(i) = NOTAPPL then
			//here is where I need to insert the etra "member" if I haven't done it already
			if MemberNames(i-1) <> maketext(tr(110)) then
				memberNumbers(i) = i;
				memberNames(i) = maketext(tr(110));
				memberNumbers(i+1) = NOTAPPL;
				break;
			endif;
		endif;
		inc(i);
	enddo;



PROC C2
	if $ = 66 then	//No electicity
		skip to C149;
	endif;



PROC C4
preproc
	if C2 <> 1 and C3A <> 1 then
		skip to C41;
	endif;
	
postproc
	if $ = 4 then
		skip to C6;
	endif;



PROC C5
	if $ > B2 then
		errmsg(tr(123),B2);
		reenter;
	endif;
	
	
	if C4 = 1 then
		skip to C9;
	elseif C4 = 2 then
		skip to C28;
	endif;
	
	
	
PROC C7
	if $ = 66 or $ = 88 then
		skip to C41;
	endif;



PROC C13
	if $ = 66 then
		skip to C26;
	endif;




PROC C15
	if $ = 2 then
		skip to C20;
	endif;



PROC C18
	if $ = 2 then
		skip to C20;
	endif;



PROC C21
	if $ = 66 then
		skip to C26;
	endif;



PROC C22
	if $ = 2 or $ = 3 then
		skip to C25;
	endif;



PROC C28
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;
	
PROC C29
	if $ <> 88 and $ > 4 then
		errmsg(tr(111),4);
		reenter;
		
	endif;
PROC C30
	if $ <> 88 and $ > C28 then
		errmsg(tr(111), C28);
		reenter;
	endif;
PROC C31
	if $ in 1,88 then
		skip to C36;
	endif;



PROC C37A
	if $ = 66 then
		//no problems
		skip to C38;
	endif;
PROC C37B
	if $ = C37A then
		errmsg(tr(151));
		reenter;
	endif;
PROC C39
	if $ = 2 then
		skip to C2_FORM;
	endif;



PROC C41
preproc
	if C2 <> 2 and C3A <> 2 then
		skip to C79;
	endif;
	
postproc
	if $ = 2 then
		skip to C79;
	endif;





PROC C50
	if $= 7 then
		skip to C63;
	endif;



PROC C51
	if $ = 2 then
		skip to C55;
	endif;
	
	
	
PROC C53
	if $ = 2 then
		skip to C55;
	endif;
	
	
	
PROC C56
	if $ = 66 then
		skip to C63;
	endif;
	
	
	
PROC C57
	if $ = 2 then
		skip to C59;
	endif;
	
	
	

PROC C59
	if $ = 2 or $ = 3 then
		skip to C63;
	endif;



PROC C65
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;
PROC C66
	if $ > 4 and $ <> 88 then
		errmsg(tr(111),4);
		reenter;
	endif;
PROC C67
	if $ > C65 and $ <> 88 then
		errmsg(tr(111), C65);
		reenter;
	endif;



PROC C68
	if $ = 0 then
		skip to C70;
	endif;



PROC C72
	if $ = 2 then
		skip to C73;
	endif;



PROC C74A
	if  pos("66", $) > 0 then
		skip to C75;
	endif;



PROC C74B
	if $ = C74A then
		errmsg(tr(151));
		reenter;
	endif;
PROC C76
	if $ = 2 then
		skip to C82_FORM;
	endif;



PROC C79
preproc
	if C2 <> 3 and C3A <> 3 then
		skip to C83_FORM;
	endif;

	
postproc
	if $ = 2 then
		skip to C83_FORM;
	else 
	solarDeviceType = maketext(tr(115));
	endif;




PROC C82L
onfocus
	//Value set with extra person.
	setValueset($, memberNumbers, memberNames);
	
	


PROC C82M
	if $ = 1 or $ = 2 then
		skip to C82P
	elseif $ = 3 then
		skip to C82Q;
	endif;
	
	
PROC C82N
	skip to C82Q;
	
	
	
PROC C82R
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;
	
	
	
	
PROC C83A
	if $ = 2 then
		skip to C84_FORM;
	else
		solarDeviceType = Maketext(tr(116));
	endif;			
			


PROC C83L
preproc
// NB: Membervalueset with Added person
	setValueset($, memberNumbers, memberNames);



PROC C83M
	if $ = 1 or $ = 2 then
		skip to C83P;
	elseif $ = 3 then
		skip to C83Q;
	endif;
	
	
PROC C83N
	skip to C83Q;
	
	
	
PROC C83O
	skip to C83P;



PROC C83R
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;
	
	
	
	
PROC C84A
	if $ = 2 and ((C2 <> 3 and C3A <> 3) or c79 = 2) and c83a = 2 then
		skip to C4_FORM;
	endif;
	if $ = 2 then
		skip to C3_FORM;
	endif;



PROC C84L
onfocus
// NB: Member set with ekstra member
	setValueset($, memberNumbers, memberNames);


PROC C84M
	if $ = 1 or $ = 2 then
		skip to C84p;
	elseif $ = 3 then
		skip to C84q;
	endif;
	
	
PROC C84N
skip to C84Q;
	
	
	
PROC C84R
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;
	
	
PROC C87A
	if $ = 3 then
		skip to C4_FORM;
	else
		solarDeviceType = getLabel(C87A, $);
	endif;
	
	
PROC C87
	if $ = 1 then
		skip to C91;
	endif;



PROC C93
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;



PROC C94
	if $ > 4 and $ <> 88 then
		errmsg(tr(111),4);
		reenter;
	endif;
	


PROC C95
	if $ > C93 and $ <> 88 then
		errmsg(tr(111),C93);
		reenter;
	endif;



PROC C96
	if $ = 2 then
		skip to C98;
	endif;
	
	
	
PROC C98
	if pos("66", $) > 0 and length(strip($)) <> 2 then
		errmsg(tr(153));
		reenter;
	endif;
PROC C99
	if $ in 2,88 then
		skip to C101;
	endif;



PROC C100A
	if pos("66", $) > 0 and length(strip($)) <> 2 then
		errmsg(tr(153));
		reenter;
	endif;
	if pos("55", $) = 0 then
		skip to C101;
	endif;



PROC C102
	if $ < 2000 or $ > sysdate("YYYY") then
		errmsg(tr(144), sysdate("YYYY"));
		reenter;
	endif;


PROC C103
onfocus
	years = 0;
	if C82K > 0 then
		years = C82K;
	endif;
	
	if C83K > years then
		years = C83K;
	endif;
	
	if C84K > years then
		years = C84K;
	endif;
	
	if C102 < sysdate("YYYY")-years and C102 > 0 then
		years = sysdate("YYYY")-C102;
	endif;
	
postproc
	if $ = 1 then
		skip to C105;
	endif;



PROC C105
	if $ = 3 then
		skip to C107;
	endif;



PROC C106
	if pos("06", $) > 0 and length(strip($)) <> 2 then
		errmsg(tr(154));
		reenter;
	endif;
PROC C107
preproc
	if C2 <> 4 and C3A <> 4 then
		skip to C131;
	endif;
	
	
postproc
	if $ = 2 then
		skip to C131;
	endif;
	
	
	
PROC C108
	if $ = 2 then
		skip to C110;
	endif;
	
	
	
PROC C111
	if pos("44", $) > 0 and length(strip($)) > 2 then
		errmsg(tr(142));
		reenter;
	endif;
PROC C112
	if $ > 31 and $ <> 88 then
		errmsg(tr(111),31);
		reenter;
	endif;
PROC C113A
	if pos("55", $) = 0 then
		skip to C114;
	endif;
	
	
	
PROC C120
	if $ = 2 then
		skip to C122;
	endif;



PROC C123
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;



PROC C124
	if $ > 4 then
		errmsg(tr(111),4);
		reenter;
	endif;



PROC C125
	if $ > C123  and $ <> 88 then
		errmsg(tr(111), C123);
		reenter;
	endif;
		


PROC C127A
	if $ = 66 then
		skip to C128;
	endif;


PROC C127B
	if $ = C127A then
		errmsg(tr(151));
		reenter;
	endif;
PROC C128

	
	
PROC C129
	if $ = 2 then
		skip to C131;
	endif;
	


PROC C130
	if $ <> 55 then
		skip to C5_FORM;
	endif;



PROC C131
onfocus
	if C2 <> 6 and C3A <> 5 then
		skip to C6_FORM;
	endif;
	
postproc
	if $ = 3 then
		skip to C6_FORM;
	endif;



PROC C132
	if pos("77", $) > 0 and length(strip($)) > 2 then
		errmsg(tr(142));
		reenter;
	endif;



PROC C134
	if $ = 2 then
		skip to C136;
	endif;



PROC C140
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;
		


PROC C141
	if $ > 4 and $ <> 88 then
		errmsg(tr(111),4);
		reenter;
	endif;



PROC C142
	if $ > C140 and $ <> 88 then
		errmsg(tr(111), C140);
		reenter;
	endif;



PROC C143
	if $ > C141 and $ <> 88 then
		errmsg(tr(111), C141);
		reenter;
	endif;
	


PROC C146A
	if $ = 66 then
		skip to C147;
	endif;
	
	
	
PROC C146B
	if $ = C146A then
		errmsg(tr(151));
		reenter;
	endif;
PROC C147
	if $ = 2 then
		skip to C149;
	endif;



PROC C149
	if $ = 0 then
		skip to D_FORM;
	endif;



PROC C150
	if $ = 1 then
		skip to D_FORM;
	endif;
	
	
	
PROC C151
	if $ = 1 then
		skip to D_FORM;
	endif;
	
	
	
PROC C153
	if $ = 0 then
		skip to D_FORM;
	endif;
	
	
	
PROC D1
preproc
	//Removing the extra person from the family member set (Was added at the start of the C sections.)
	numeric i = 0;
	while i < 20 do
		if memberNumbers(i) = NOTAPPL then
			//Remove the one before this
			memberNames(i-1) = "";
			memberNumbers(i-1) = NOTAPPL;
			break;
		endif;
		inc(i);
	enddo;
	
	if C2 in 1,2 or C3A in 1,2 then
		$= 1;
		skip to E1;
	endif;



PROC D2
	
onfocus
	setvalueset($, memberNumbers, memberNames);


PROC D3
	
onfocus
	//Randomly select a percentage of price
	array thePercentages(2) = 0.5, 1;
	seed(systime());
	CF = round(thePercentages(random(1,2)) * gridPrice);
		
		
postproc
	if $ = 1 then
		skip to D9;
	endif;	
	
PROC D6
	if $ =  1 then
		skip to D9;
	endif;



PROC D7
	if $ =  1 then
		skip to D9;
	endif;



PROC E1
preproc
	$ = C2;
	noinput;
	


PROC E2
onfocus
	setValueset($, memberNumbers, memberNames);



PROC E3
		
onfocus	
	//Randomly select a percentage of price
	array thePercentages(2) = 0.5, 1;
	seed(systime());
	CF = round(thePercentages(random(1,2)) * highDevicePrice);
		
		
postproc
	if $ = 1 then
		skip to F1;
	endif;
		
	


PROC E5
	if $ = 1 then
		skip to F1;
	endif;





PROC F1
onfocus
	setValueset($, memberNumbers, memberNames);


PROC F2
onfocus
	//Loop through HH to find if there are children
	numeric i = 1;
	numeric kids = 0;
	while AB5(i) <> NOTAPPL do
		if AB5(i) > 5 and AB5(i) < 18 and AC6(i) = 1 then
			kids = 1;
			break;
		endif;
		inc(i);
	enddo;
	
	if kids = 0 then
		skip to F3;
	endif;

PROC F3
	//Check if "none" has been chosen together with other lamp types
	if pos("05", $) > 0 and length(strip($)) <> 2 then
		errmsg(tr(118));
		reenter;
	endif;
	
	if pos("05", $) > 0 then
		skip to G1;
	endif;



PROC F4A
onfocus
	string current = edit("99", curocc());
	
	//Need to deal with the "55 other" first
	if curocc() = 6 and pos("55", F3) > 0 then
		//Other is chosen
		$ = 1;
		lampType = getLabel(F3, "55");
		skip to F4B;
	else
		if  pos(current, F3) > 0 then
			$ = 1;
			lampType = getLabel(F3, current);
			skip to F4B;
		else
			$ = 2;
			//Not chosen
			skip to next;
		endif;
	endif;
PROC F4E
	if $ > 31 and $ <> 88 then
		errmsg(tr(111),31);
		reenter;
	endif;
PROC F4F
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;
PROC F4G
	if $ = 66 then
		skip to F4I
	endif;



PROC F4H
	if $ = F4G then
		errmsg(tr(151));
		reenter;
	endif;
PROC F4I
	if pos("0", $) > 0 and length(strip($)) > 1 then
		errmsg(tr(118));
		reenter;
	endif;
PROC F5
	if pos("7", $ ) > 0  and length(strip($)) > 1 then
		errmsg(tr(118));
		reenter;
	endif;
	
	if pos("7", $ ) > 0 then
		skip to G1;
	endif;



PROC F5A
onfocus
	string current = edit("Z", curocc());
	
	//The skip for "7 none" has been done in F5
	if  pos(current, F5) > 0 then
		fuelType = getLabel(F5, current);
	else
		//Not chosen
		skip to next;
	endif;



PROC G1
onfocus
	setvalueset($, membernumbers, memberNames);



PROC G2
	if pos("66", $) > 0 and length(strip($)) > 2 then
		errmsg(tr(118));
		reenter;
	endif;
	
	if pos("66", $) > 0  then
		//"none" is chosen
		skip to H1;
	endif;
	


PROC GB
onfocus
	string current = edit("99", curocc());
	
	//deal with "other" first
	if curocc() = 4 and pos("55", G2) > 0 then
		lampType = getLabel(G2, "55");
	else 	
		if  pos(current, G2) > 0 then
			lampType = getLabel(G2, current);
		else
			//Not chosen
			skip to next;
		endif;
	endif;


postproc
	if $ = 0 then
		errmsg(tr(124));
		reenter;
	endif;



PROC GE
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;
PROC H1
onfocus
	setValueset($, memberNumbers, memberNames);



PROC H2
onfocus
	fuelType = getLabel(H2, curocc());
	//errmsg("Fuel: %s", fuelType);
	$ = curocc();
	skip to H2A;
	




PROC H2A
onfocus
	//For some reason it happens that this does not get set in the previous field
	if fuelType = "" then
		fuelType = getLabel(H2, curocc());
	endif;
	
	
postproc
	if $ = 2 then
		skip to next;
	endif;



PROC H2G
	if  length(strip($)) > 8 then
		errmsg(tr(125));
		reenter;
	endif;
	
	if pos("77", $) > 0 and length(strip($)) > 2 then
		errmsg(tr(142));
		reenter;
	endif;
PROC H2H
	if $ = 0 then
		skip to next;
	endif;



PROC H2J
	if $ = 0 or $ = 88 then
		skip to next;
	endif;



PROC I1
onfocus
	setValueset($, memberNumbers, memberNames);



PROC I2
	if pos("09", $) > 0 and length(strip($)) > 2 then
		errmsg(tr(118));
		reenter;
	endif;
	
	if pos("09", $) > 0 then
		//none
		skip to I36;
	endif;
	
PROC I2B3
onfocus
	//As the items chosen always are in increasing order, I can just pick the strings as they come
	if curocc() = 1 then
		$ = toNumber(I2[1:2]);
		cookType = getlabel(I2, I2[1:2]);
	elseif curocc() = 2 then
		if length(strip(I2)) > 2 then
			$ = toNumber(I2[3:2]);
			cookType = getlabel(I2, I2[3:2]);
		else
			skip to I36;
		endif;
	elseif curocc() = 3 then
		if length(strip(I2)) > 4 then
			cookType = getlabel(I2, I2[5:2]);
			$ = toNumber(I2[5:2]);
		else
			skip to I36;
		endif
	endif;
	noinput;
PROC I2B4

postproc
	if $ = 3 then
		skip to I2B7;
	elseif $ = 4 then
		skip to I2B11;
	endif;



	
		
PROC I2B5
onfocus
	setValueset($, memberNumbers, memberNames);



PROC I2B6
	skip to I2B8;



PROC I2B10
//	skip to I2B12;



PROC I2B15
	if $ = 4 or $ = 5 then
		skip to I2B18A;
	endif;



PROC I2B16
	if $ = 2 then
		skip to I2B18A;
	endif;



PROC I2B18B
	if $ = I2B18A then
		errmsg(tr(151));
		reenter;
	endif;
PROC I2B19A
onfocus
	fuelType = getlabel(I2B18A, I2B18A(curocc()));


PROC I2B19B
preproc
	if I2B18B = 66 then
		//Seond fuel type was "Not applicable
		$ = NOTAPPL;
		skip to I2B20;
	endif;
onfocus	
	fuelType = getlabel(I2B18B, I2B18B(curocc())); 



PROC I2B27
	if $ = 2 then
		skip to I2B30;
	endif;
	
	
	
PROC I2B29
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;
PROC I2B30
	if pos("9", $) > 0 and length(strip($)) > 1 then
		errmsg(tr(118));
		reenter;
	endif;

	if pos("9",  $) > 0 then
		skip to I2B32;
	endif;


PROC I2B32
	if $ = 1 then
		skip to I2B35;
	endif;
	



PROC I2B34
	if $ = I2B33 and $ <> "55  " then
		errmsg(tr(151));
		reenter;
	endif;
PROC I2B35
preproc
	//Don't want to ask this question if the respondent already said another one was the main
	
	if (curocc() = 2 and I2B35(1) = 1) or (curocc() = 3 and (I2B35(1) = 1 or I2B35(2)) = 1) then
		skip to next;
	endif;
	

PROC I36
preproc
	if H2A(7) = 1 or H2A(8) = 1 or H2A(9) = 1 or H2A(10) = 1
		or H2A(11) = 1 or H2A(12) = 1 or H2A(13) = 1 or H2A(16) = 1 then
			//contiune
	else
		skip to I43;
	endif;
	
postproc
	if $ = 88 or $ = 2 then
		skip to J_FORM;
	endif;
PROC I37
	if $ = 2 then
		skip to I39;
	elseif $ = 3 then
		skip to I41;
	elseif $= 4 then
		skip to I42;
	endif;



PROC I38
	skip to I43;



PROC I40
	skip to I43;



PROC I41
	skip to I43;



PROC I43
	if $ = 4 then
		skip to J_FORM;
	endif;



PROC J1
    //skip to W_FORM;
	if $ = 2 then
		skip to J4;
	endif;
	
	
	
PROC J1_1
onfocus
	setValueset($, memberNumbers, memberNames);



PROC J2
	if $ <> 9 then
		skip to J4;
	endif;
	
PROC J4
	if $ = 2 then
		skip to K_FORM;
	endif;



PROC J5
	if $ <> 6 then
		skip to K_FORM;
	endif;
	
	
	
PROC K2
onfocus
	string woodOrCharcoal;
	numeric tmp;
	seed(systime());
	
	//Finding out how to skip and setting variables
	if (pos("1", I2) > 0 or pos("2", I2) > 0) and AA2 = 2 then
		woodOrCharcoal = "wood";
		tmp = random(1,2);	//The two first elements of the cookStove array are wood..
	elseif pos("8", I2) > 0  and AA8 = 1 then
		woodOrCharcoal = "charcoal";
		tmp = random(3,4);		
	endif;
	
	cookType = cookStove(tmp);
	CF = round(random(1,3) * cookStovePrices(tmp)/3);	//this gives 0.33, 0.66 or 1 of the price of the randomly chosen cookstove
	
	//1errmsg("cooktype: %s, price: %d", cookType, CF);
	if woodOrCharcoal = "" then
		skip to L_FORM;
	endif;
	
	//Setting the person to answer
	setValueset($, memberNumbers, memberNames);
	currMember = memberNames(I1);
	
	
	

PROC K3
	if $ = 1 then
		skip to L_FORM;
	endif;
PROC K5
	if $ = 1 then
		skip to L_FORM;
	endif;
PROC L1_1
onfocus
	setValueset($, memberNumbers, memberNames);



PROC L_NO
onfocus

	//Skip if they have no lightbulbs
	if curocc() < 11 and curocc() > 6 and LA(6) = 2 then
		skip to next;
	endif;
	
	 numeric i = curocc();
	 L_DESC = getLabel(L_NO, i);
	 $ = i;
	 skip to LA;
	



PROC LA
onfocus
	//Setting the CAPI text
	hhItem = strip(L_DESC);
	
	if curocc() in 7-9 then
		hhItemExtra = makeText(tr(148)); 
		setValueset(LA,LA_NUMBER);
	else	
		hhItemExtra = "";
		setValueset(LA,LA_YESNO);
	endif;



postproc
	
	if !(curocc() in 6,12,14,24) then
		skip to LC;
	else
		if $ = 2 then
			skip to LC;
		endif;
	endif;
	if (curocc() in 11) and $ = 2 then
		skip to L26;
	endif;
	
	//Skip for bulbs has to be in the preproc of the first elt of the roster

PROC LB
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;
PROC LC
	if curocc() = 11 and LA = 2 then
		skip to L26;
	endif;
	
	
PROC L26
	if $ = 2 then
		skip to M_FORM;
	endif;



PROC M2
	if $ = 2 then
		skip to M4;
	endif



PROC N1_1
onfocus
	//First need to draw random group of family to ask question to.
	//Looping until I find one..
	numeric gr;
	while 1 do
		seed(systime());
		gr = random(1,4);
		if hhDemographics(gr) > 0 then	
			break;
		endif;
	enddo;
	
	//And now I want a random person in that group
	numeric personNo = random(1, hhDemographics(gr));
	
	//Getting the name of the person
	numeric gender, minAge;
	if gr = 1 then	//Woman
		gender = 2;
		minAge = 15;
	elseif gr = 2 then	//girl
		gender = 2;
		minAge = 5;
	elseif gr = 3 then	//man
		gender = 1;
		minAge = 15;
	else	//boy
		gender = 1;
		minAge = 5;
	endif;
	
	numeric i = 1, currPersonNo = 1;
	while i <= 20 do //Max 20 persons in a household
		if AB4(i) <> gender then
			inc(i);
			next;
		else	//Right gender
			if minAge = 5 and (AB5(i) >= 5 and AB5(i) < 15) then
				if currPersonNo = personNo then
					//Found the right person: The i-th family member
					break;
				else
					inc(currPersonNo);
				endif;
			elseif minAge = 15 and AB5(i) >= 15 then
				if currPersonNo = PersonNo then
					//Again found the person
					break
				else
					inc(currPersonNo);
				endif;
			endif;
			inc(i);
		endif;
	enddo;
	
	currMember = AB1(i);
	errmsg(tr(145), strip(lstrip(currMember)));
	$ = i;
	noinput;


PROC N1000
onfocus
//	//First need to draw random group of family to ask question to.
//	//Looping until I find one..
//	numeric gr;
//	while 1 do
//		seed(systime());
//		gr = random(1,4);
//		if hhDemographics(gr) > 0 then
//			break;
//		endif;
//	enddo;
//
//	//And now I want a random person in that group
//	numeric personNo = random(1, hhDemographics(gr));
//
//	//Getting the name of the person
//	numeric gender, minAge;
//	if gr = 1 then	//Woman
//		gender = 2;
//		minAge = 15;
//	elseif gr = 2 then	//girl
//		gender = 2;
//		minAge = 5;
//	elseif gr = 3 then	//man
//		gender = 1;
//		minAge = 15;
//	else	//boy
//		gender = 1;
//		minAge = 5;
//	endif;
//
//	numeric i = 1, currPersonNo = 1;
//	while i <= 20 do //Max 20 persons in a household
//		if AB4(i) <> gender then
//			inc(i);
//			next;
//		else	//Right gender
//			if minAge = 5 and (AB5(i) >= 5 and AB5(i) < 15) then
//				if currPersonNo = personNo then
//					//Found the right person: The i-th family member
//					break;
//				else
//					inc(currPersonNo);
//				endif;
//			elseif minAge = 15 and AB5(i) >= 15 then
//				if currPersonNo = PersonNo then
//					//Again found the person
//					break
//				else
//					inc(currPersonNo);
//				endif;
//			endif;
//			inc(i);
//		endif;
//	enddo;
//
//	currMember = AB1(i);
//
PROC N_NO
onfocus
    
	$ = curocc();
	N_TYPE = getLabel($, curocc());
	hhChore = strip(N_TYPE);
	skip to NA1;
	
	
	
PROC NA1
onfocus
	hhChoreGroup = getLabel($);
	
//	if hhDemographics(1) = 0 then 	//No women in the HH
//		skip to NC1;
//	endif;
	
postproc
	if $ = 1 then
		skip to NC1;
	endif
	
	



PROC NB1
onfocus
	hhChoreGroup = getLabel($);



PROC NC1
onfocus
	hhChoreGroup = getLabel($);

//	if hhDemographics(2) = 0 then 	//No girls in the HH
//		skip to NE1;
//	endif;
	
	


PROC N16_1A
preproc
	if hhDemographics(1) = 0 then	//Only asking if there are women in the right age
		skip to N16_1B;
	endif;
postproc
    if $ > hhDemographics(1) then
    	errmsg(tr(152),hhDemographics(1));
		reenter;
    endif
     	
	

	
	
	
PROC N16_2A
preproc
	if hhDemographics(1) = 0 then
		skip to N16_1B;
	endif;
	if N16_1A = 0 then
        skip to N16_1B;
	endif;

PROC N16_3A
preproc
	if N16_2A = 0 then
        skip to N16_1B;
	endif;




PROC N16_1B
preproc
	if hhDemographics(2) = 0 then
		skip to N16_1C;
	endif;
	if N16_1B = 0 then
        skip to N16_1C;
	endif;
postproc
    if $ > hhDemographics(2) then
    	errmsg(tr(152),hhDemographics(2));
		reenter;
    endif



PROC N16_2B
preproc
	if hhDemographics(2) = 0 then
		skip to N16_1C;
	endif;
	if N16_1B = 0 then
        skip to N16_1C;
	endif;


PROC N16_3B
preproc
	if N16_2B = 0 then
        skip to N16_1C;
	endif;


PROC N16_1C
preproc
	if hhDemographics(3) = 0 then	
		skip to N16_1D;
	endif;
postproc
    if $ > hhDemographics(3) then
    	errmsg(tr(152),hhDemographics(3));
		reenter;
    endif

PROC N16_2C
preproc
	if hhDemographics(3) = 0 then	
		skip to N16_1D;
	endif;
	if N16_1C = 0 then
        skip to N16_1D;
	endif;


PROC N16_3C
preproc
	if N16_2C = 0 then
        skip to N16_1D;
	endif;


PROC N16_1D
preproc
	if hhDemographics(4) = 0 then
		skip to O_FORM;
	endif;
postproc
    if $ > hhDemographics(4) then
    	errmsg(tr(152),hhDemographics(4));
		reenter;
    endif

PROC N16_2D
preproc
	if N16_1D = 0 then
        skip to O_FORM;
	endif;


PROC N16_3D
preproc
	if N16_2D = 0 then
        skip to O_FORM;
	endif;


PROC O1_1
onfocus
	errmsg(tr(146), strip(lstrip(currMember)));
	$ = N1_1;
	noinput;


PROC O2
 if $ = 2 then
 	skip to Q_FORM;
 endif;
PROC Q1_1
onfocus
	setValueset($, membernumbers, memberNames);



PROC Q1_2
 if $ = 0 then
  skip to q1_4;
 endif; 
PROC S1_1
onfocus
	setValueset($, memberNumbers, memberNames);



PROC S1
	
preproc
		if C2 = 1 or C2 = 2 then	//connected
			$ = 1;
		else
			$ = 2;
			skip to S5;
		endif;
		noinput;
		
		


PROC S2
	if pos("0", $) > 0 and length(strip(lstrip($))) > 1 then
		errmsg(tr(118));	//Chose "none" in combo with other
		reenter;
	endif;
	
	if pos("0", $) > 0 then
		skip to S4;
	endif;
PROC S4
preproc
	mainElSource = getlabel(C2, C2);
PROC T1_1
onfocus
	if hhDemographics(1) < 1 or hhDemographics(1) in NOTAPPL, DEFAULT then //No women in household
		skip to U_FORM;
	else
		array wCode(10); //Max 10 women in HH
		array String wLabel(10);
		
		//Loop through household memebers to find women
		numeric i = 1, j = 0;
		while i <= 20 do
			if AB1(i) = "" then
				//finished.
				break;
			else
				if  AB4(i) = 2 and AB5(i) > 14 then	//Found a woman
					wcode(j) = i;
					wLabel(j) = AB1(i);
					inc(j);
				endif;
				inc(i);
			endif;
		enddo;
		
		wcode(j) = NOTAPPL;
		
		setValueset($, wcode, wLabel);
	endif;



PROC U1_1
onfocus
	setValueset($, memberNumbers, memberNames);

PROC U2_NO
onfocus
	livelyhood = getLabel($, curocc());
	$ = curocc();
	skip to U2A1;



PROC U2A1
	if $ = 2 then
		skip to next;
	endif;



PROC U2A3
onfocus
	if curocc() in 1,2,3 then
		array codeset(5) = 1,2,3,4, NOTAPPL;
		array string labelset(5) = 	maketext(tr(128)),
									maketext(tr(129)),
									maketext(tr(130)),
									maketext(tr(131)),
									"";
		setValueset($, codeset, labelset);
	elseif curocc() in 4,5,6,7,8,9 then
		array codeset(9) = 1,2,3,4,5,6,7,8, NOTAPPL;
		array string labelset(9) = 	maketext(tr(132)),
									maketext(tr(133)),
									maketext(tr(134)),
									maketext(tr(135)),
									maketext(tr(136)),
									maketext(tr(137)),
									maketext(tr(138)),
									maketext(tr(139)),
									"";
		setValueset($, codeset, labelset);
	endif;

PROC U2A6
onfocus
	if AB5(1) < 25 or B2 < 5 then	//Only ask HH with head 25 years or older who lived in community >= 5 years
		skip to next;
	endif;

postproc
	if $ = 2 then
		skip to next;
	endif;



PROC U14A
preproc
  if U13A = 2 then
   skip U14B;
  endif; 
PROC U14B
preproc
  if U13B = 2 then
   skip W_FORM;
  endif; 

PROC W1_1
onfocus

	if hhDemographics(1) < 1 or hhDemographics(1) in NOTAPPL, DEFAULT then //No women in household
		skip to AA_END_FORM;
	else
  errmsg(tr(147));
		array wCode(10); //Max 10 women in HH
		array String wLabel(10);

		//Loop through household memebers to find women
		numeric i = 1, j = 0;
		while i <= 20 do
			if AB1(i) = "" then
				//finished.
				break;
			else
				if  AB4(i) = 2 and AB5(i) > 14 then	//Found a woman
					wcode(j) = i;
					wLabel(j) = AB1(i);
					inc(j);
				endif;
				inc(i);
			endif;
		enddo;

		wcode(j) = NOTAPPL;

		setValueset($, wcode, wLabel);
	endif;

PROC WA_0
preproc
//onfocus
	$ = curocc();
	WA_TYPE = getLabel($, curocc());
	socAndSec = strip(WA_TYPE);
//	errmsg("Wa1: %s ", lstrip(socAndSec));
	skip to WA1;
	
PROC WA1
preproc
 if WA_0 > 7 then
  errmsg("%s",WA_TYPE);
 endif
PROC WA2
preproc
 if WA_0 > 7 then
  errmsg("%s",WA_TYPE);
 endif
