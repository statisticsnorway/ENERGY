PROC GLOBAL

	// This will be set only in the Menu application as a parameter and will be fetched from there
    String country ;

	//country = Menu.getproperty("country");
	//Country specific variables
	numeric gridPrice = 3700;	//country specific price to connect to the grid
	numeric highDevicePrice = 5000;//Country specific prices for solar devices

	//NB: When filling the following array with country specific cookstoves
	//Please notice that the order is important: The two first elements should be wood stoves, the to last charcoal!
	array String cookstove(4) = "COUNTRY SPECIFIC Aspirational wood ICS",
								"LOCALLY AVAILABLE, popular affordable wood ICS",
								"COUNTRY SPECIFIC Aspirational charcoal ICS",
								"LOCALLY AVAILABLE, popular affordable charcoal ICS";
	array cookStovePrices(4) = 2100,700,2100,700;	//Reference prices for the above defined cookStoves


	//Variables to use in the CAPI question. Has to be globally declared
	string currMember;
	string Member12AndAbove; // Membername person 12 years and above
	string solarDeviceType; // Type of solar home system, used in second C section
	string mainElSource;
	string lampType;
	numeric CF;
	string fuelType;
	string cookType;
	string hhItem;
	string hhItemExtra;
	string hhChore;
	string hhChoreGroup;
	string livelyhood;
	string socAndSec;
	string healthQuestion;
	string consumeItem;
	string productName;
	string businessName;
	numeric years;
	string activity;
	numeric energySources; // number of energy sources, used in first C section
	numeric rangeStart; // Start of a range, to be used in common error message for ranges
	numeric rangeEnd; // End of a range, to be used in common error message for ranges
	numeric rangeUnknown; // Unknown range, to be used in common error message for ranges
	numeric personCooksMostOften = 0; // To be calculated in A8 and used in I section
	string  namepersonCooksMostOften ; // To be calculated in A8 and used in I section
	string  personDecideToBuyStove ; // To be  calculated in I12 and used in heading in K section
	string  headName;
	string  femaleHeadName;
	string  spouseName;
	string  mostUsedStove;
	string  fueltype1;
	string  fueltype2;
	string  UnitFuel;
	numeric mostoften = 9;
	string  chosenChildName; // Name of chosen child for O section (health)
	numeric schoolBoys = 0;
	numeric schoolGirls = 0;
	string electricityCompany;

	Array numeric memberNumbers(20);	//Keeping the HH member codelists all through the system as they are used frquently
	Array String memberNames(20);
	//Setting the person to answer
	array aCode(20); // Keeping the list of adults, max 20
	array String aLabel(20);
	numeric adultCount = 0; //adult counter

	array hhDemographics(7) = 0,0,0,0,0,0,0;	//splitting household in age and gender groups. To facilitate skipping
											//element 1 = #women, 2 = #girls, 3 = #men, 4 = #boys, 5 = #children under 5, 6 = adults (15 years and above)
											// 7 = children 0-15 years
	Array numeric childrenNos(20);
	Array String childrenNames(20);
	numeric childCount = 0; // child counter

	Array string persons12AndAboveNos(20);
	Array String persons12AndAboveNames(20);
	numeric persons12AndAboveCount = 0; // Persons 12 year and above, counter


	array numeric powerSources(9);
	array string powerSourcesLabels(9);


	//function to strip leading spaces (the original strip function only strips trailing spaces)


function string lstrip(string theString)
	numeric aPos = pos(" ", theString);
	while aPos = 1 do
		//leading space
		theString = theString[2];
		aPos = pos(" ", theString);
	enddo;
		lstrip = theString;
end;


function onStop()
	string currField = getSymbol();
	if currField = "AB1" then
		reenter AA10;
	else
		savepartial();	
		stop(1);
	endif;
end;



PROC HHQ_FF


PROC HHQ_QUEST

preproc
	string language = sysparm(language);
	setLanguage(language);
	
	// Fetch country parameter from Menu application
	pff menu;
	menu.load("../Menu/Menu.pff");
	country = menu.getProperty("country");
    //errmsg ("Country: %s",country);
	
	//Have to fill the arrays for the HH members if the questionnaire is partially saved.
	if ispartial() then
		//If coming back for the interview as agreed upon, I don't want to return to exactly that field
		if getSymbol(savePartial) = "AA13" then
			advance to AA15;
		else
		
			numeric memNum = totocc(AB_HOUSEHOLD_MEMBERS_REC);

			numeric i = 1;
			numeric j = 0;
			numeric k = 0;
			while i <= memNum do
				memberNumbers(i) = i;
				memberNames(i) = AB1(i);

				//adding to relevant hhdemographic group
				if AB4(i) = 2 then
					if AB5(i) > 14 then	//woman
						inc(hhDemographics(1));
						inc(hhDemographics(6));
					elseif AB5(i) <=4 then	//little child
						inc(hhDemographics(5));
					else	//girl
						inc(hhDemographics(2));
					endif
				else
					if AB5(i) > 14 then	//man
						inc(hhDemographics(3));
						inc(hhDemographics(6));
					elseif AB5(i) <= 4 then	//little child
						inc(hhDemographics(5));
					else		//boy
						inc(hhDemographics(4));
					endif;
				endif;
				if AB5(i) >= 0 and AB5(i) < 16 then
					inc(j);
					inc(hhDemographics(7));
					childrenNos(j) = i;
					childrenNames(j) = AB1(i);
				endif;

				// Persons 12 years and above
				if AB5(i) >= 12 then
					inc(k);
					persons12AndAboveNos(k) = maketext("%02d",i);
					persons12AndAboveNames(k) = AB1(i);
				endif;
				if ab3(i) = 1 then
					headName = ab1(i);
				endif;
				if ab3(i) = 1 and ab4(i) = 2 then
					femaleHeadName = strip(ab1(i));
				endif;
				if ab3(i) = 2 and ab4(i) = 2 then
					spouseName = ab1(i);
				endif;
				
				inc(i);

				
			enddo;
	
			memberNumbers(i) = NOTAPPL;
			
		//Loop through household members to find adults
			i = 1;
			j = 0;
			while i <= 20 do
				if AB1(i) = "" then
				//finished.
					break;
				else
					if  AB5(i) > 14 then	//Found an adult
						acode(j) = i;
						aLabel(j) = AB1(i);
						inc(j);
					endif;
					inc(i);
				endif;
			enddo;

			acode(j) = NOTAPPL;


			//Need to find the name of the current respondent if we're still registering hh members
			string currField = getSymbol(savepartial);
			if currField[1:2] = "AB" or currField[1:2] = "AC"
				or currField in "A2","A3","A4","A5","A6","A7","A8" then
				numeric currNo;
				numeric curr = curocc();
				numeric posX = pos("(", currField);
				numeric posY = pos(")", currField);
				currNo = toNumber(currField[posX+1:posY-posX]);
				
				currMember = AB1(currNo);
			endif;
			advance to getsymbol(savePartial);
		endif;
	endif;

postproc

	stop(1);



PROC AA1

preproc

	$ = toNumber(sysparm("REGION"));
	noinput;



PROC AA2

preproc

	$ = toNumber(sysparm("DISTRICT"));
	noInput;



PROC AA3

preproc

	$ = toNumber(sysparm("SUBDISTRICT"));
	noinput;



PROC AA4

preproc

	$ = toNumber(sysparm("LOCALITY"));
	noinput;


PROC AA5

preproc

	$ = toNumber(sysparm("VILLAGE"));
	noinput;




PROC AA6

preproc

	$ = toNumber(sysparm("EA"));
	noinput;



PROC AA7

preproc

	$ = toNumber(sysparm("URBANRURAL"));
	noinput;


PROC AA8

preproc

	AA8 = toNumber(sysparm("SERIAL"));
	noinput;


PROC AALOGIN

preproc

	$ = sysparm("LOGIN");
	noinput;



PROC AA14

preproc

	//Look up value in sample file
	SA1 = AA1; SA2 = AA2; SA3 = AA3; SA4 = AA4; SA5 = AA5; SA6 = AA6; SA8 = AA8;
	SLOGIN = AALOGIN;
	numeric ok = loadcase(SAMPLING_DICT, SLOGIN, SA1, SA2, SA3, SA4, SA5, SA6, SA8);
		$ = SA10;

	//Might as well set the other fields from the sample file too..
	ADDRESS_LOCATION = SA11;
	AA7A = SA7A;
	AA7B = SA7B;
	noInput;
	//skip to AA9;
	

PROC ADDRESS_LOCATION
preproc
	noinput;
PROC AA7A
preproc
	noinput;
PROC AA7B
preproc
	noinput;
PROC AA9

preproc

	//errmsg("Checking coordinate just in case: %d", visualValue(AA7A));
	$ = edit("99-99-99",sysdate("YYDDMM"));
	noinput;




PROC AA10

preproc

	currMember = AA14;

postproc

	if $ = 1 then //interview OK
		skip to AA15;
	elseif $ = 2 then
		skip to AA11;
	elseif $ = 3 then
		//Normal flow - why refuse
	else	//House is vacant. Going to end
		skip to AA20;
	endif;



PROC AA10A

	skip to AA20;


PROC AA13

postproc
	if !ispartial() then
		savepartial();
		stop(1);
	endif;


PROC AA15

preproc

	if not ispartial() then
		currMember = AA14;	//To set CAPI question
	endif;

postproc

	if $ = 2 or $ = 3 then
		skip to AA17;
	endif;



PROC AA17

	if $ = 1 then
		skip to HHNAMES;
	endif;



PROC AA18


PROC AB1

preproc
	//Might as well fill in HoH and Main respondent
	if curocc() = 1 then
		$ = AA14;
	elseif curocc() = 2 then
		$ = AA18;
	endif;


postproc

	if $ = "" and curocc() = 1 then
		errmsg(tr(158));
		reenter;
	endif;

	if $ = "" then	//finished
		memberNumbers(curocc()) = NOTAPPL; //this is to indicate the end of the valueset
		skip to AB_AC_FORM;
	endif;

	//make a valueset for hh members as this question is asked frequently
	memberNumbers(curocc()) = curocc();
	memberNames(curocc()) = $;

	
PROC AB3

onfocus

	currMember = AB1(curocc());
	if currMember = "" then
		skip to B_FORM;	//Finished with all family members
	endif;

	//Setting HoH as I already know that
	if curocc() = 1 then
		$ = 1;
		 headName = currMember;
		skip to AB3B;	//Should we tell that we already recorded the HoH?
	endif;

postproc

	if curocc() > 1 and $ = 1 then
		errmsg(tr(107), strip(lstrip(AB1(1))));
		reenter;
	endif;
	if $ = 1 then
		headName = currMember;
	endif;
	if curocc() > 1 then
		skip to AB4;
	endif;


PROC AB4

	if ab3(curocc()) = 1 and $ = 2 then
		femaleHeadName = strip(ab1(curocc()));
	endif;

	if ab3(curocc()) = 2 and $ = 2 then
		spouseName = strip(ab1(curocc()));
	endif;

PROC AB5
postproc	
	//adding to relevant hhdemographic group
	if AB4 = 2 then
		if $ > 14 then	//woman
			inc(hhDemographics(1));
			inc(hhDemographics(6));
		elseif $ <=4 then	//little child
			inc(hhDemographics(5));
		else	//girl
			inc(hhDemographics(2));
		endif
	else
		if $ > 14 then	//man
			inc(hhDemographics(3));
			inc(hhDemographics(6));
		elseif $ <= 4 then	//little child
			inc(hhDemographics(5));
		else		//boy
			inc(hhDemographics(4));
		endif;
	endif;

// Children
	if $ >= 0 and $ < 16 then
		inc(childCount);
		inc(hhDemographics(7));
		childrenNos(childCount) = curocc($);
		childrenNames(childCount) = AB1;
//		errmsg("childrenNos: %d, childrenNames: %S",childrenNos(childCount),childrenNames(childCount))
	endif;

// Persons 12 years and above
	if $ >= 12 then
		inc(persons12AndAboveCount);
		persons12AndAboveNos(persons12AndAboveCount) = maketext("%02d",curocc($));
		persons12AndAboveNames(persons12AndAboveCount) = AB1;
//		errmsg("persons12AndAboveNos: %d, persons12AndAboveNames: %S",persons12AndAboveNos(persons12AndAboveCount),persons12AndAboveNames(persons12AndAboveCount))
	endif;

	//make a valueset for adult hh members as this question is asked frequently
	if  $ > 14 then	//Found an adult
		inc(adultCount);
		aCode(adultCount) = curocc($);
		aLabel(adultCount) = AB1;
//		errmsg("Adult: %d, Name: %S",aCode(adultCount),aLabel(adultCount))
	endif;
	
PROC AB6

preproc

	if AB5 < 15 then
		$ = 8;
		skip to AC1;
	endif;



PROC AC1

preproc

	if AB5 < 6 then //Only ask those 6  years and above for the rest of the section
		skip to next;
	endif;
	
	if getlanguage() = "EN" and country = "TZ" then
		setvalueset($,READ_EN_TZ);
	elseif getlanguage() = "SW" and country = "TZ" then
		setvalueset($,READ_TZ);
	elseif getlanguage() = "EN"  and country = "MZ" then
		setvalueset($,READ_EN_MZ);
	elseif getlanguage() = "PT"  and country = "MZ" then
		setvalueset($,READ_MZ);
	endif;

PROC AC2

	if $ = 2 then
		skip to A2;
	endif;



PROC AC3

	if $ = 2 then
		skip to AC7;
	endif;



PROC AC4
preproc
	if getlanguage() = "EN" and country = "TZ" then
		setvalueset($,EDUC_EN_TZ);
	elseif getlanguage() = "SW" and country = "TZ" then
		setvalueset($,EDUC_TZ);
	elseif getlanguage() = "EN"  and country = "MZ" then
		setvalueset($,EDUC_EN_MZ);
	elseif getlanguage() = "PT"  and country = "MZ" then
		setvalueset($,EDUC_MZ);
	endif;

PROC AC5

	if $ > AB5 or $ < AB5 -1 then
		errmsg(tr(150),strip(lstrip(currMember)),AB5);
		reenter;
	endif;


PROC AC6

preproc

//	if AB5(curocc()) > 17 then	//more than 17 years
//		skip to A8;
//	endif;

postproc

	if $ = 1 then
		if AB4 = 2 then
			inc(schoolGirls);
		elseif AB4 = 1 then
			inc(schoolBoys);
		endif
	endif;
	skip to A2;
	//	errmsg("Girls: %d, Boys: %d, School kids: %d",schoolGirls,schoolBoys,hhdemographics(7));


PROC AC7

preproc
	numeric currYear = sysdate("YYYY");

postproc
	if $ = 2 then
		skip to AC9;
	endif;



PROC AC8
preproc
	if getlanguage() = "EN" and country = "TZ" then
		setvalueset($,EDUC_EN_TZ);
	elseif getlanguage() = "SW" and country = "TZ" then
		setvalueset($,EDUC_TZ);
	elseif getlanguage() = "EN"  and country = "MZ" then
		setvalueset($,EDUC_EN_MZ);
	elseif getlanguage() = "PT"  and country = "MZ" then
		setvalueset($,EDUC_MZ);
	endif;

postproc

	if  $ > AC4(curocc()) then
		errmsg(tr(155), AC4(curocc()));
		reenter;
	endif;


PROC AC9
preproc
	if getlanguage() = "EN" and country= "TZ" then
		setvalueset($,EDUC_EN_TZ);
	elseif getlanguage() = "SW" and country= "TZ" then
		setvalueset($,EDUC_TZ);
	elseif getlanguage() = "PT" and country= "MZ" then
		setvalueset($,EDUC_EN_MZ);
	elseif getlanguage() = "PT" and country= "MZ" then
		setvalueset($,EDUC_MZ);
	endif;

postproc

	if  $ > AC4(curocc()) then
		errmsg(tr(156), AC4(curocc()));
		reenter;
	endif;


PROC A2

preproc

	if AB5 < 12 then
		skip to next;
	endif;

postproc

	if $ >= 15 then
		skip to A6;
	endif;


PROC A4

	if $ > 12 then
		errmsg(tr(108));
		reenter;
	endif;



PROC A5

	if $ > 31 then
		errmsg(tr(109));
		reenter;
	endif;


PROC A6

preproc

	if AB5 < 17 then
		skip to A8;
	endif;

postproc

	if $ >= 15 then
		skip to A8;
	endif;


PROC A8

postproc

	// Find the person who cooks most often = the first of those with lowest values for A8;
	if $ < mostoften then
		mostoften = $;
		personCooksMostOften = curocc();
		namePersonCooksMostOften = memberNames(curocc());
		//  errmsg("I test Person,%d %s, value, %d, curocc, %d, mostoften %d",personCooksMostOften,namePersonCooksMostOften,$,curocc(),mostoften);
	endif;
	//if $ = 2 and personCooksMostOften < $ then


PROC B1

preproc
//	if !ispartial() then
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(179);
	endif;
	// Delete 0-codes from adult household members array. Also find member number of oldest person in household
	numeric k = 1;
	numeric highestAge = 0;
	numeric oldestMember = 0;
	while k <= 20 do
		if ab5(k) > highestAge then
			highestAge = ab5(k);
			oldestMember=memberNumbers(k);
		endif;
		if aCode(k) = 0 then
			aCode(k) = NOTAPPL;
			aLabel(k) = "";
		endif;
		inc(k);
	enddo;
//	k = 1;
//	while k <= 5 do
//		errmsg("Adult: %d, Name: %S, HighestAge: %d, Oldest: %d",aCode(k),aLabel(k), highestAge,oldestMember);
//		inc(k);
//	enddo;
postproc

	// can't live in community longer than age of the oldest person
	if $ > highestAge then
		errmsg(tr(157),highestAge);
		reenter;
	endif;
//	skip to N_FORM;


PROC B2

//	skip to GP_FORM;

	if $ in 1,3,6 then
		skip to B4;
	endif;



PROC B4

	if $ = 1 then
		skip to B6;
	endif;



PROC B15

preproc
//	if !ispartial() then
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(180);
	endif;
	
postproc

	if $ = 2 then
		skip to B17;
	endif;



PROC B17

	if $ = 2 then
		skip to B19;
	endif;



PROC B20

	if $ = 2 then
		skip to C1_form;
	endif;


PROC C1
onfocus

//	setValueset(C1, memberNumbers, memberNames);
	setValueset($, acode, aLabel);

//postproc
	//Need to add an item to the household menbers array to cover for person not in household anymore
	//This is needed for all C sections. To be removed
//	numeric i = 0;
//	while i < 20 do
//		if memberNumbers(i) = NOTAPPL then
//			//here is where I need to insert the etra "member" if I haven't done it already
//			if MemberNames(i-1) <> maketext(tr(110)) then
//				memberNumbers(i) = i;
//				memberNames(i) = maketext(tr(110));
//				memberNumbers(i+1) = NOTAPPL;
//				break;
//			endif;
//		endif;
//		inc(i);
//	enddo;



PROC C2
preproc
//	if !ispartial() then
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(181);
	endif;
	energySources = 0;

postproc
	if $ = 2 then
		skip to C4;
	endif;
	if $ = 1 then
		inc(energySources);
	endif;


PROC C4

postproc

	if $ = 2 then
		skip to c6;
	endif;


PROC C5

	energySources = energySources + length(lstrip(strip($)));


PROC C6

postproc

	if $ = 1 then
		inc(energySources);
	endif;


PROC C7

postproc

	if $ = 1 then
		inc(energySources);
	endif;


PROC C8

postproc

	if $ = 1 then
		inc(energySources);
	endif;


PROC C9

postproc

	if $ = 1 then
		inc(energySources);
	endif;


PROC C10

preproc
	if energySources = 0 then
		skip to C12;
	endif;
	
	numeric i = 1;
	numeric code;
	string text;
	do while i < 9 ;
		if powerSources(i) = 0 then
			powerSources(i) = NOTAPPL;
		endif;
		inc(i);
	enddo;

	i = 0;

	if c2 = 1 then
		inc(i);
		code = 1;
		powerSources(i) = 1;
		powerSourcesLabels(i) =  getlabel($,code);
		//	  errmsg("%d, %d, %d, %s",i,C10,powerSources(i),powerSourcesLabels(i));
	endif;

	if c4 = 1 then
		if pos("1", c5) > 0 then
			inc(i);
			code = 3;
			powerSources(i) = 3;
			powerSourcesLabels(i) =  getlabel($,code);
			//	  errmsg("%d, %d, %d, %s",i,$,powerSources(i),powerSourcesLabels(i));
		endif;

		if pos("2", c5) > 0 then
			inc(i);
			code = 7;
			powerSources(i) = 7;
			powerSourcesLabels(i) =  getlabel($,code);
			//	  errmsg("%d, %d, %d, %s",i,$,powerSources(i),powerSourcesLabels(i));
		endif;

		if pos("3", c5) > 0 then
			inc(i);
			code = 8;
			powerSources(i) = 8;
			powerSourcesLabels(i) =  getlabel($,code);
			//	  errmsg("%d, %d, %d, %s",i,$,powerSources(7),powerSourcesLabels(i));
		endif;
	endif;

	if c6 = 1 then
		inc(i);
		code = 4;
		powerSources(i) = 4;
		powerSourcesLabels(i) =  getlabel($,code);
		//	  errmsg("%d, %d, %d, %s",i,$,powerSources(i),powerSourcesLabels(i));
	endif;

	if c7 = 1 then
		inc(i);
		code = 5;
		powerSources(i) = 5;
		powerSourcesLabels(i) =  getlabel($,code);
		//	  errmsg("%d, %d, %d, %s",i,$,powerSources(i),powerSourcesLabels(i));
	endif;

	if c8 = 1 then
		inc(i);
		code = 6;
		powerSources(i) = 6;
		powerSourcesLabels(i) =  getlabel($,code);
		//	  errmsg("%d, %d, %d, %s",i,$,powerSources(i),powerSourcesLabels(i));
	endif;

	if c9 = 1 then
		inc(i);
		code = 9;
		powerSources(i) = 9;
		powerSourcesLabels(i) =  getlabel($,code);
		//	  errmsg("%d, %d, %d, %s",i,$,powerSources(i),powerSourcesLabels(i));
	endif;

	// Only one source of electricity, hence no back up electricity
	if i = 1 then
		code = powerSources(i);
		$ = powerSources(i);
		c11 = 66;
		noinput;
		if code in 3, 7, 8 then
			solarDeviceType = powerSourcesLabels(i) ;
		endif;
		skip to c12;
	endif;
	
	//Final value in the powerSources array should be notappl
	powerSources(i+1) = NOTAPPL;
	setValueset($, powerSources, powerSourcesLabels);


postproc

	if $ in 3, 7, 8 then
		solarDeviceType = getvaluelabel($) ;
	endif;
	//	errmsg("energySources er %d",energySources);


PROC C11

preproc

	numeric code;
	if energySources = 1 then
		skip to C12;
	endif;

	// Take out the answer from C10 in the valueset
	  numeric i = 1;
	  numeric main = 0;
	do while i <= energySources-1 ;
		if powerSources(i) = C10 then
			main = 1;
		endif;
		if main = 1 then
			powerSources(i) = powerSources(i+1);
			powerSourcesLabels(i) = powerSourcesLabels(i+1);
		endif;
		inc(i);
	enddo;

	code = 66;
	powerSources(energySources) = 66;
	powerSourcesLabels(energySources) =  getlabel($,code);

	setValueset($, powerSources, powerSourcesLabels);

	

postproc

	if $ = c10 then
		errmsg(151);
		reenter;
	endif;



PROC C13

preproc

	if c2 = 1 then
		skip to C16;
	endif;


PROC C14

	if $ in 2, 88 then
		skip to C2_FORM;
	endif


PROC C15

postproc

	skip to C2_FORM;


PROC C16

preproc
//	if !ispartial() then
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(174);
	endif;
onfocus;

	if getlanguage() = "EN" then
		electricityCompany = "Tanzania: TANESCO/REA, Mozambique: EDM";
	elseif getlanguage() = "SW" then
		electricityCompany = "TANESCO/REA";
	elseif getlanguage() = "PT" then
		electricityCompany = "EDM";
	endif;
//	errmsg("Electricity: %s, language: %s", electricityCompany,getlanguage());
PROC C17

	if $ > B1 then
		errmsg(tr(123),B1);
		reenter;
	endif;


	if C16 = 1 then
		skip to C18;
	elseif C16 = 2 then
		skip to C38;
	endif;






PROC C23
	if $ = 1 then
		skip to C25;
	endif;
	if $ = 3 then
		skip to C28;
	endif;


PROC C25

preproc

	rangeStart = 5;
	rangeEnd = 150;
	rangeUnknown = 888;

postproc

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(167,rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C26

preproc

	rangeStart = 1000;
	rangeEnd = 99999;
	rangeUnknown = 88;

postproc

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(167,rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C27

preproc

	if $ = 1 then
		skip to C33;
	endif;


PROC C28

	if $ = 66 then
		skip to C36;
	endif;




PROC C29

preproc

	if c27 = 1 then
		skip to C30;
	endif;


PROC C30
preproc
	if C27 = 1 then
		skip to C33;
	endif;
PROC C33
preproc
	if C27 <> 1 then
		skip to C36;
	endif;


PROC C38

	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;
	if $ = 24 then
		C39 = 4;
		skip to c40;
	endif


PROC C39

	if $ <> 88 and $ > 4 then
		errmsg(tr(111),4);
		reenter;

	endif;

	if $ > C38 then
		errmsg(tr(159), $, C38);
		reenter;
	endif;


PROC C40
	if $ in 0,88 then
		skip to C45;
	endif;



PROC C46

	if $ = 66 then
		//no problems
		skip to C48;
	endif;


PROC C47

	if $ = C46 then
		errmsg(tr(151));
		reenter;
	endif;


PROC C48

	if $ = 2 then
		skip to C50;
	endif;



PROC C50

preproc

	if C3 <> 2 then
		skip to C2_FORM;
	endif;


PROC C52

preproc

	if c51 = 2 then
		skip to C2_FORM;
	endif;


PROC C53

preproc
	If not(C10 in 3, 7, 8) then
		skip to C89;
	endif;
	If (ispartial() and $ = "") or !ispartial() then
		errmsg(176,strip(solarDeviceType));
	endif;	


PROC C54

	if $ = 2 then
		skip to c56;
	endif;


PROC C56
preproc
	rangeStart = 20;
	rangeEnd = 600;
	rangeUnknown = 888;

postproc
	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(167,rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C57

preproc

	rangeStart = 20;
	rangeEnd = 900;
	rangeUnknown = 888;

postproc

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(167,rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C58

preproc
	if C56 in 20:600 and C57 in 20:887,889:900 then
		skip to C59;
	endif;
	rangeStart = 6;
	rangeEnd = 24;
	rangeUnknown = 88;

postproc

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(167,rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C59

preproc

	rangeStart = 200;
	rangeEnd = 10000;
	rangeUnknown = 88;

postproc

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(167,rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C60

postproc

	if $ = 2 then
		skip to C62;
	endif;


PROC C61

preproc

	rangeStart = 5;
	rangeEnd = 1500;
	rangeUnknown = 8888;

postproc

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(167,rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C63

onfocus

	//Value set with extra person.
	numeric i = 0;
	while i < 20 do
		if memberNumbers(i) = NOTAPPL then
			//here is where I need to insert the extra "member" if I haven't done it already
			if MemberNames(i-1) <> maketext(tr(110)) then
				memberNumbers(i) = i;
				memberNames(i) = maketext(tr(110));
				memberNumbers(i+1) = NOTAPPL;
				break;
			endif;
		endif;
		inc(i);
	enddo;	
	setValueset($, memberNumbers, memberNames);



PROC C64

	if $ = 1 then
		skip to C66
	elseif $ = 2 then
		skip to C73;
	endif;


PROC C65

postproc

	skip to C73;



PROC C66

	if $ = 1 then
		skip to C70;
	endif;



PROC C75

	if $ = 24 then
		C76 = 4;
		skip to c82;
	endif ;
	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;


PROC C76

	if $ > 4 and $ <> 8 then
		errmsg(tr(111),4);
		reenter;
	endif;

	if $ > C75 then
		errmsg(tr(159), $, C75);
		reenter;
	endif;


PROC C80

	If C10 = 8 then
		skip to C83;
	endif;


PROC C83

	if $ = 2 then
		skip to C85;
	endif;


PROC C89

preproc
	if C10 <> 4 then
		skip to C4_FORM;
	endif;
//	if !ispartial() then
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(177);
	endif;

onfocus

	if $ = 2 then
		skip to C91;
	endif;



PROC C90
	if C89 = 2 then
		skip to C91;
	endif;
PROC C92



PROC C93

	if pos("q", $) > 0 and length(strip($)) > 1 then
		errmsg(tr(142));
		reenter;
	endif;


PROC C94

	if $ > 31 and $ <> 88 then
		errmsg(tr(111),31);
		reenter;
	endif;


PROC C98

	if $ = 2 then
		skip to C100;
	endif;


PROC C102

	if $ = 2 then
		skip to C122;
	endif;



PROC C105

	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;

	if $ = 24 then
		C106 = 4;
		skip to c107;
	endif


PROC C106

	if $ > 4 then
		errmsg(tr(111),4);
		reenter;
	endif;

	if $ > C105 then
		errmsg(tr(159), $, C105);
		reenter;
	endif;


PROC C108

	if $ in 55,66 then
		skip to C110;
	endif;


PROC C109

	if $ = C108 then
		errmsg(tr(151));
		reenter;
	endif;


PROC C110

	if $ = 2 then
		skip to C4_FORM;
	endif;



PROC C111

	if $ <> 55 then
		skip to C4_FORM;
	endif;



PROC C112

preproc

	if C10 <> 6 then
		skip to C5_FORM;
	endif;
//	if !ispartial() then
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(178);
	endif;





PROC C113

	if pos("q", $) > 0 and length(strip($)) > 1 then
		errmsg(tr(142));
		reenter;
	endif;



PROC C115

	if $ = 2 then
		skip to C117;
	endif;



PROC C116

preproc

	rangeStart = 5;
	rangeEnd = 1500;
	rangeUnknown = 8888;

postproc

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(167,rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C121

	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;



PROC C122

	if $ > 4 and $ <> 88 then
		errmsg(tr(111),4);
		reenter;
	endif;

	if $ > C121 then
		errmsg(tr(159), $, C121);
		reenter;
	endif;


PROC C123

preproc

	rangeStart = 20;
	rangeEnd = 500;
	rangeUnknown = 888;

postproc

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(167,rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C124

preproc

	rangeStart = 6;
	rangeEnd = 24;
	rangeUnknown = 88;

postproc

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(167,rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C125

preproc

	rangeStart = 200;
	rangeEnd = 600;
	rangeUnknown = 88;

postproc

	if not($ in rangeStart:rangeEnd or $ = rangeUnknown) then
		errmsg(167,rangeStart,rangeEnd,rangeUnknown,$);
		reenter;
	endif;


PROC C127

	if $ = C126 then
		errmsg(tr(151));
		reenter;
	endif;


PROC C128

preproc
//	if !ispartial() then
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(182);
	endif;

postproc

	if $ = 0 then
		skip to D_FORM;
	endif;



PROC C129

	if $ = 1 then
		skip to C134;
	endif;



PROC C130

	if $ = 1 then
		skip to C134;
	endif;



PROC C132

	if $ = 0 then
		skip to D_FORM;
	endif;



PROC D1

preproc

	If (C10 = 1 or C11 = 1) then
		skip to E_FORM;
	endif;
//	if !ispartial() then
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(189);
	endif;

onfocus

	//Randomly select a percentage of price
	array thePercentages(2) = 0.5, 1;
	seed(systime());
	CF = round(thePercentages(random(1,2)) * gridPrice);

postproc

	if $ = 1 then
		skip to E_FORM;
	endif;


PROC D2

	if $ =  1 then
		skip to  E_FORM;
	endif;



PROC D3

	if $ =  1 then
		skip to E_FORM;
	endif;



PROC E_FORM

preproc

	if C10 = 3 or C11 = 3  then
		skip to G_FORM;
	endif;
	
	skip to E1;


PROC E1
preproc
//	If !isPartial() and (C11 = 1 or C10 = 1) then
	if (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		If (C11 = 1 or C10 = 1)  then
			errmsg(168);
		else
			errmsg(169);
		endif;
	endif;

onfocus
	//Randomly select a percentage of price
	array thePercentages(2) = 0.5, 1;
	seed(systime());
	CF = round(thePercentages(random(1,2)) * highDevicePrice);


postproc

	if $ = 1 then
		skip to G_FORM;
	endif;




PROC E2

	if $ = 1 then
		skip to G_FORM;
	endif;





PROC G_FORM

preproc

	if C10 <> 9 then
		skip to F_FORM;
	endif;


PROC G1
preproc
//	if !ispartial() then
	If (ispartial() and $ = "") or !ispartial() then
		errmsg(175);
	endif;

postproc
	if pos("66", $) > 0 and length(strip($)) > 2 then
		errmsg(tr(118));
		reenter;
	endif;

	if pos("66", $) > 0  then
		//"none" is chosen
		skip to F_FORM;
	endif;


PROC G2A

onfocus

	string current = edit("99", curocc());

	//deal with "other" first
	if curocc() = 4 and pos("55", G1) > 0 then
		lampType = getLabel(G1, "55");
	else
		if  pos(current, G1) > 0 then
			lampType = getLabel(G1, current);
		else
			//Not chosen
			skip to next;
		endif;
	endif;


postproc

	if $ = 0 then
		errmsg(tr(124));
		reenter;
	endif;

// Don't ask g2b and g2c for other devices
	if curocc() = 4 and pos("55", G1) > 0 then
		skip to G3;
	endif;


PROC G2C

	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;


PROC F1

onfocus

	if hhDemographics(6) < 1 or hhDemographics(6) in NOTAPPL, DEFAULT then //No adults in household
		skip to I_FORM;
	elseif not(schoolGirls > 0 or schoolBoys > 0) and C10 in 1,3,4 then
		skip to I_FORM;
	else
//	if !ispartial() then
//		If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
//			errmsg(tr(192));
//		endif;
		setValueset($, acode, aLabel);
	endif;

	//	setValueset($, memberNumbers, memberNames);


PROC F2

onfocus

	//Loop through HH to find if there are children attending school
	//	numeric i = 1;
	//	while AB5(i) <> NOTAPPL do
	//		if AB5(i) > 5 and AB5(i) < 18 and AC6(i) = 1 then
	//			schoolkids = 1;
	//			break;
	//		endif;
	//		inc(i);
	//	enddo;

	// School attendance set in AC6
	if not(schoolGirls > 0 or schoolBoys > 0) then
		skip to F3;
	endif;


PROC F3

preproc

	if C10 in 1,3,4 then
		skip to I_FORM;
	endif;

postproc

	lampType = getvaluelabel($);
	if $ = 1 then
		skip to F6;
	endif;
	if $ in 5,6,7 then
		skip to I_FORM;
	endif;


PROC F8

postproc

	if $ = 66 then
		skip to F10;
	endif;


PROC F9

postproc

	if $ = F8 then
		errmsg(151);
		reenter;
	endif;


PROC F11

preproc

	if F3 = 1 then
		skip to I_FORM;
	endif;

postproc
	if $ = 7 then
		skip to I_FORM;
	endif;
    fuelType = getValueLabel($);





PROC F12





PROC I1

preproc

	$ = PersonCooksMostOften;
	//errmsg("Person, %s, %d",namePersonCooksMostOften,personCooksMostOften);

onfocus
	numeric i = 0;
	while i < 20 do
		if memberNames(i) = maketext(tr(110)) then
			memberNumbers(i) = NOTAPPL;
			memberNames(i) = "";
			break;
			endif;
		inc(i);
	enddo;
	setValueset($, memberNumbers, memberNames);



PROC I2
preproc
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(196);
	endif;

postproc
	if $ = 2 then
		skip to i4;
	endif;


PROC I3

	if $ = "" then
		errmsg(170);
		reenter;
	endif;


PROC I4

	if $ = 2 then
		skip to i6;
	endif;


PROC I5

	if $ = "" then
		errmsg(170);
		reenter;
	endif;


PROC I6

	if $ = 2 then
		skip to i8;
	endif;


PROC I7

	if $ = "" then
		errmsg(170);
		reenter;
	endif;


PROC I8

	if $ = 2 then
		skip to i10;
	endif;


PROC I9

	if $ = "" then
		errmsg(170);
		reenter;
	endif;


PROC I10

preproc

	if i2 = 2 and i4 = 2 and i6 = 2 and i8 = 2 then // Have no stoves at all
		skip to O_FORM
	endif;
	array numeric cookstoves(18);
	array string cookstovesLabels(18);
	array string cookstovesImages(18);
	numeric i = 1;
	numeric j = 1;
	string stove;

	if i3 <> '' then
		do while i3[i:3] <> ''
			cookstoves(j) = tonumber(i3[i:3]);
			cookstovesLabels(j) =  getvaluelabel(i3[i:3]);
			cookstovesImages(j) =  concat("..\Images\Cookstoves_",i3[i:3],".jpg");
			i = i + 3;
			j = j + 1;
			//      errmsg("B Cook %d %s, i %d, Image: %s",cookstoves(j-1),cookstovesLabels(j-1),i,cookstovesImages(j-1));
		enddo;
	endif;

	i = 1;
	if i5 <> '' then
		do while i5[i:3] <> ''
			cookstoves(j) = tonumber(i5[i:3]);
			cookstovesLabels(j) =  getvaluelabel(i5[i:3]);
			cookstovesImages(j) =  concat("..\Images\Cookstoves_",i5[i:3],".jpg");
			i = i + 3;
			j = j + 1;
			//      errmsg("D Cook %d %s, i %d",cookstoves(j-1),cookstovesLabels(j-1),i);
		enddo;
	endif;

	i = 1;
	if i7 <> '' then
		do while i7[i:3] <> ''
			cookstoves(j) = tonumber(i7[i:3]);
			cookstovesLabels(j) =  getvaluelabel(i7[i:3]);
			cookstovesImages(j) =  concat("..\Images\Cookstoves_",i7[i:3],".jpg");
			i = i + 3;
			j = j + 1;
			//      errmsg("F Cook %d %s, i %d",cookstoves(j-1),cookstovesLabels(j-1),i);
		enddo;
	endif;

	i = 1;
	if i9 <> '' then
		do while i9[i:3] <> ''
			cookstoves(j) = tonumber(i9[i:3]);
			cookstovesLabels(j) =  getvaluelabel(i9[i:3]);
			cookstovesImages(j) =  concat("..\Images\Cookstoves_",i9[i:3],".jpg");
			i = i + 3;
			j = j + 1;
			//      errmsg("H Cook %d %s, i %d",cookstoves(j-1),cookstovesLabels(j-1),i);
		enddo;
	endif;

	i = 1;
	do while i < 18;
		if cookstoves(i) = 0 then
			cookstoves(i) = NOTAPPL;
			//      errmsg("Nulling Cook %d %s",cookstoves(j-1),cookstovesLabels(j-1));
		endif;
		i = i + 1;
	enddo;
	setValueset($, cookstoves, cookstovesLabels, cookstovesImages);

	//     valueset string I2I_VS;
	//     valueset numeric i2i_valueset ;
	//	 string y;
	//	 numeric zn;
	//	 string zs;
	//	 numeric x;

	//	 i = 0;
	//     do while cookstoves(i) <> NOTAPPL;
	//	     inc(i);
	//		 y = cookstovesLabels(i);
	//		 zn = cookstoves(i);
	//		 zs = cookstovesImages(j);
	//		 errmsg("%s, %s, %d",y,zs,zn);
	//         i2i_valueset.add(y, zs,zn);
	//     enddo;

	//	setValueset($, i2i_valueset);

postproc

	mostUsedStove = getvaluelabel($);


PROC I11

preproc

	if lstrip(strip(i3)) = "101" then
		$ = 4;
		skip to I18;
	endif;

postproc

	if $ = 3 then
		skip to i14;
	endif;
	if $ = 4 then
		skip to i18;
	endif;


PROC I12
onfocus
	setValueset($, memberNumbers, memberNames);
postproc
	if $ <> PersonCooksMostOften then
		personDecideToBuyStove = concat(", ",tr(198)," ",strip(memberNames($))," (",tr(199),")");
	else
		personDecideToBuyStove = "";
	endif;


PROC I13

postproc

	skip to i15;


PROC I23

	If not((I22 in 1,2,3 or $ in 1,2,3) and (I2=1 or I4=1 or I6=1)) then
		skip to I25;
	endif;


PROC I25

	fueltype1 = getvaluelabel($);
	If $ in 18, 99, 55 then
		skip to I29 ;
	endif;
	If $ in 13 then
		skip to I37 ;
	endif;


PROC I26

postproc

	if $ = i25 then
		errmsg(151);
		reenter;
	endif;
	fueltype2 = getvaluelabel($);
	If $ in 13, 18, 66, 55 then
		skip to I29 ;
	endif;


PROC I28

preproc

	if i26 in 13, 18, 55, 99 then
		skip to i29;
	endif;


PROC I29
preproc
	If I25 in 3,8,17 then
		skip to I34;
	endif;
PROC I30


postproc

	UnitFuel = getvaluelabel($);


PROC I41

	if $ = 2 then
		skip to i43;
	endif;


PROC I43

preproc

	if not(I25 in 2,3 or I26 in 2,3) then
		skip to i46;
	endif;
//	if !ispartial() then
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(171);
	endif;

postproc

	if $ = 0 then
		skip to I46;
	endif;


PROC I45_MM
	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
PROC I46

preproc

	if not((I25 in 2,3,4,7,8,9,10,11,12,14,17 or I26 in 2,3,4,7,8,9,10,11,12,14,17) AND (I22 in 1,2,3 or I23 in 1,2,3)) then
		skip to O_FORM;
	endif;
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(195);
	endif;

postproc

	if $ = 2 then
		skip to I48;
	elseif $ = 3 then
		skip to I50;
	elseif $= 4 then
		skip to I51;
	endif;



PROC I47

postproc

	skip to I52;



PROC I49

postproc

	skip to I52;



PROC I50

postproc

	skip to I52;



PROC I52

	if $ = 4 then
		skip to I54;
	endif;


PROC O_FORM

PROC O1
preproc
//	if !ispartial() then
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(183);
	endif;

onfocus

	//	errmsg(tr(146),strip(namePersonCooksMostOften));
		$ = I1;
		currMember = memberNames(PersonCooksMostOften);
		noinput;


PROC O2

	// if $ = 2 then
	// 	skip to Q_FORM;
	// endif;


PROC O6
preproc
	if O2 = 2 and O3 = 2 and O4 = 2 and O5 = 2 then
		skip to O7;
	endif;	
PROC O7

preproc

	if hhDemographics(7) > 0 then
		seed(systime());
		numeric child;
		child = random(1, hhDemographics(7));
		setValueset($, childrenNos, childrenNames);
		chosenChildName = getlabel($,childrenNos(child));
//			errmsg("Chosen child: %d, Child number %d, Child name %s, hhDemographics(7): %d",child,childrenNos(child),chosenChildName,hhDemographics(7));
			$ = childrenNos(child);
			noinput;
			skip to O8;
	else
		skip to K_FORM;
	endif;


PROC O8

preproc
//	if !ispartial() then
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(193,chosenChildName);
	endif;


PROC O12
preproc
	if O8 = 2 and O9 = 2 and O10 = 2 and O11 = 2 then
		skip to K_FORM;
	endif;	
PROC K_FORM
preproc
	if not(I10 in 101,102,201) then
		skip to J_FORM;
	endif;


PROC K1
preproc
//	if !ispartial() then
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(190);
	endif;

	string woodOrCharcoal;
	numeric tmp;
	seed(systime());

	//Finding out how to skip and setting variables
	if I10 in 101,102  then
		woodOrCharcoal = "wood";
		tmp = random(1,2);	//The two first elements of the cookStove array are wood..
	elseif I10 = 201 then
		woodOrCharcoal = "charcoal";
		tmp = random(3,4);
	endif;

	cookType = cookStove(tmp);
	CF = round(random(1,3) * cookStovePrices(tmp)/3);	//this gives 0.33, 0.66 or 1 of the price of the randomly chosen cookstove

//	errmsg("woodOrCharcoal: %s, cooktype: %s, I10: %d", woodOrCharcoal, cookType, I10);
onfocus
	if woodOrCharcoal = "" then
		skip to J_FORM;
	endif;

//	Adult person
	setValueset($, acode, aLabel);

//	currMember = memberNames(I1);




PROC K2

	if $ = 1 then
		skip to J_FORM;
	endif;


PROC K3
	if $ = 1 then
		skip to J_FORM;
	endif;
PROC J1
preproc
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(197);
	endif;
postproc
	//skip to W_FORM;
	if $ = 2 then
		skip to J3;
	endif;




PROC J2



PROC J3

	if $ = 2 then
		skip to L_FORM;
	endif;



PROC J4

	if $ <> 6 then
		skip to L_FORM;
	endif;



PROC L1

onfocus
//	setValueset($, memberNumbers, memberNames);
	setValueset($, acode, aLabel);



PROC L2

preproc

	//Skip if they have no lightbulbs
	if curocc() < 11 and curocc() > 6 and L2A(6) = 2 then
		skip to next;
	endif;
	// categories 7-9 only for households with electricity as main or back-up source
	if not(C10 in 1,3,4,5,7 or C11 in 1,3,4,5,7) and curocc() in 7:9 then
		skip to next;
	endif;

	// categories 10-19 only for households with electricity as main or back-up source
	if not(C10 in 1,3,4,5 or C11 in 1,3,4,5) and curocc() in 10:19 then
		skip to next;
	endif;

	// categories 20-22 only for households with electricity as main or back-up source
	if not(C10 in 1,3,4,5,7 or C11 in 1,3,4,5,7) and curocc() in 20:22 then
		skip to next;
	endif;

onfocus

	hhitem = getLabel($, curocc());
	$ = curocc();
	skip to L2A;




PROC L2A

onfocus

	//Setting the CAPI text
	//hhItem = strip(L_DESC);

	if curocc() in 20:22 then
		hhItemExtra = makeText(tr(148));
		setValueset(L2A,L2A_NUMBER);
	else
		hhItemExtra = "";
		setValueset(L2A,L2A_YESNO);
	endif;

postproc

	if !(curocc() in 9,22) then
		skip to L2C;
	elseif curocc() = 9 and $ = 2 then
		skip to L2C;
	elseif curocc() = 22 and $ = 0 then
		skip to L2C;
	endif;


PROC L2B

	if $ > 24 and $ <> 88 then
		errmsg(tr(111),24);
		reenter;
	endif;


PROC L2C

preproc

	// 7c-9c only for those that had grid electricity 5 years ago C12 in (1,2,3,4,5,7)
	if not(C12 in 1,2,3,4,5,7) and curocc() in 7:9 then
		skip to next;
	endif;

	// categories 10-19 only for households with electricity as main or back-up source
	if not(C10 in 1,3,4,5 or C11 in 1,3,4,5) and curocc() in 10:19 then
		skip to next;
	endif;

	// categories 20-22 only for households with electricity as main or back-up source
	if not(C10 in 1,3,4,5,7 or C11 in 1,3,4,5,7) and curocc() in 20:22 then
		skip to next;
	endif;




PROC L5

	if $ = 2 then
		skip to M_FORM;
	endif;



PROC M1
preproc
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(200);
	endif;
postproc	
	if $ = 2 then
		skip to M3;
	endif





	//PROC N1000
	//onfocus
	//	//First need to draw random group of family to ask question to.
	//	//Looping until I find one..
	//	numeric gr;
	//	while 1 do
	//		seed(systime());
	//		gr = random(1,4);
	//		if hhDemographics(gr) > 0 then
	//			break;
	//		endif;
	//	enddo;
	//
	//	//And now I want a random person in that group
	//	numeric personNo = random(1, hhDemographics(gr));
	//
	//	//Getting the name of the person
	//	numeric gender, minAge;
	//	if gr = 1 then	//Woman
	//		gender = 2;
	//		minAge = 15;
	//	elseif gr = 2 then	//girl
	//		gender = 2;
	//		minAge = 5;
	//	elseif gr = 3 then	//man
	//		gender = 1;
	//		minAge = 15;
	//	else	//boy
	//		gender = 1;
	//		minAge = 5;
	//	endif;
	//
	//	numeric i = 1, currPersonNo = 1;
	//	while i <= 20 do //Max 20 persons in a household
	//		if AB4(i) <> gender then
	//			inc(i);
	//			next;
	//		else	//Right gender
	//			if minAge = 5 and (AB5(i) >= 5 and AB5(i) < 15) then
	//				if currPersonNo = personNo then
	//					//Found the right person: The i-th family member
	//					break;
	//				else
	//					inc(currPersonNo);
	//				endif;
	//			elseif minAge = 15 and AB5(i) >= 15 then
	//				if currPersonNo = PersonNo then
	//					//Again found the person
	//					break
	//				else
	//					inc(currPersonNo);
	//				endif;
	//			endif;
	//			inc(i);
	//		endif;
	//	enddo;
	//
	//	currMember = AB1(i);
	//


PROC N_FORM

PROC N_ACTIVITY_WOMEN

preproc
//	if !ispartial() then
	if hhDemographics(1) < 1 then
		skip to N_ACTIVITY_GIRLS;
	endif;

	If curocc() = 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(172);
	endif;


//	if !ispartial() and curocc() = 1 then
	If curocc() = 1 and (((ispartial() and visualValue($) = NOTAPPL) or !ispartial())) then
		errmsg(184);
	endif;
	$ = curocc();
	activity = getLabel($, curocc());
	noinput;
	skip to N_A;


PROC N_A

postproc

	if $ > hhDemographics(1) then
		errmsg(166,$,hhDemographics(1));
		reenter;
	endif;
	if $ > 0 then
		skip to N_C_HH;
	endif;


PROC N_B

postproc

	skip to next;


PROC N_C_HH

postproc

	if $ > 24 then
		errmsg(tr(161), $);
		reenter;
	endif;


PROC N_C_MM

postproc

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_C_HH = 24 and $ > 0 then
		errmsg(tr(163), N_C_HH, $);
		reenter;
	endif;


PROC N_D_HH

	if $ > 15 then
		errmsg(tr(162), $);
		reenter;
	endif;

	if $ > N_C_HH then
		errmsg(tr(159), $, N_C_HH);
		reenter;
	endif;


PROC N_D_MM

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_D_HH = 15 and $ > 0 then
		errmsg(tr(164), N_D_HH, $);
		reenter;
	endif;

	if N_C_HH = N_D_HH and $ > N_C_MM  then
		errmsg(tr(160), N_D_HH, $, N_C_HH, N_C_MM);
		reenter;
	endif;


PROC N_ACTIVITY_GIRLS

preproc

	if hhDemographics(2) < 1 then
		skip to N_ACTIVITY_MEN;
	endif;

	If curocc() = 1 and hhDemographics(1) < 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(172);
	endif;


//	if !ispartial() and curocc() = 1 then
	If curocc() = 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(185);
	endif;
	$ = curocc();
	activity = getLabel($, curocc());
	noinput;
	// errmsg("%s",activity);
	skip to N_F;


PROC N_F

preproc

	if N_ACTIVITY_GIRLS = 6 and not(schoolGirls > 0) then
		N_ACTIVITY_GIRLS = NOTAPPL;
		skip to next;
	endif;

postproc

	if $ > hhDemographics(2) then
		errmsg(166,$,hhDemographics(2));
		reenter;
	endif;
	if $ > 0 then
		skip to N_H_HH;
	endif;


PROC N_G

postproc

	skip to next;


PROC N_H_HH

postproc

	if $ > 24 then
		errmsg(tr(161), $);
		reenter;
	endif;


PROC N_H_MM

postproc

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_H_HH = 24 and $ > 0 then
		errmsg(tr(163), N_H_HH, $);
		reenter;
	endif;


PROC N_I_HH

	if $ > 15 then
		errmsg(tr(162), $);
		reenter;
	endif;

	if $ > N_H_HH then
		errmsg(tr(159), $, N_H_HH);
		reenter;
	endif;


PROC N_I_MM

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_I_HH = 15 and $ > 0 then
		errmsg(tr(164), N_I_HH, $);
		reenter;
	endif;

	if N_H_HH = N_I_HH and $ > N_H_MM  then
		errmsg(tr(160), N_I_HH, $, N_H_HH, N_H_MM);
		reenter;
	endif;


PROC N_ACTIVITY_MEN

preproc

	if hhDemographics(3) < 1 then
		skip to N_ACTIVITY_BOYS;
	endif;
//	if !ispartial() and curocc() = 1 then
	If curocc() = 1 and hhDemographics(1) < 1 and hhDemographics(2) < 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(172);
	endif;

	If curocc() = 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(186);
	endif;
	$ = curocc();
	activity = getLabel($, curocc());
	noinput;
	skip to N_K;


PROC N_K

postproc

	if $ > hhDemographics(3) then
		errmsg(166,$,hhDemographics(3));
		reenter;
	endif;
	if $ > 0 then
		skip to N_M_HH;
	endif;


PROC N_L

postproc

	skip to next;


PROC N_M_HH

postproc

	if $ > 24 then
		errmsg(tr(161), $);
		reenter;
	endif;


PROC N_M_MM

postproc

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_M_HH = 24 and $ > 0 then
		errmsg(tr(163), N_M_HH, $);
		reenter;
	endif;


PROC N_N_HH

	if $ > 15 then
		errmsg(tr(162), $);
		reenter;
	endif;

	if $ > N_M_HH then
		errmsg(tr(159), $, N_M_HH);
		reenter;
	endif;


PROC N_N_MM

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_N_HH = 15 and $ > 0 then
		errmsg(tr(164), N_N_HH, $);
		reenter;
	endif;

	if N_M_HH = N_N_HH and $ > N_M_MM  then
		errmsg(tr(160), N_N_HH, $, N_M_HH, N_M_MM);
		reenter;
	endif;


PROC N_ACTIVITY_BOYS

preproc

	if hhDemographics(4) < 1 then
		skip to Q_FORM;
	endif;
//	if !ispartial() and curocc() = 1 then
	If curocc() = 1 and hhDemographics(1) < 1 and hhDemographics(2) < 1 and hhDemographics(3) < 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(172);
	endif;

	If curocc() = 1 and ((ispartial() and visualValue($) = NOTAPPL) or !ispartial()) then
		errmsg(187);
	endif;
	$ = curocc();
	activity = getLabel($, curocc());
	noinput;
	skip to N_P;


PROC N_P

preproc

	if N_ACTIVITY_BOYS = 6 and not(schoolBoys > 0) then
		N_ACTIVITY_BOYS = NOTAPPL;
		skip to next;
	endif;

postproc

	if $ > hhDemographics(4) then
		errmsg(166,$,hhDemographics(4));
		reenter;
	endif;
	if $ > 0 then
		skip to N_R_HH;
	endif;


PROC N_Q

postproc

	skip to next;


PROC N_R_HH

postproc

	if $ > 24 then
		errmsg(tr(161), $);
		reenter;
	endif;


PROC N_R_MM

postproc

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_R_HH = 24 and $ > 0 then
		errmsg(tr(163), N_R_HH, $);
		reenter;
	endif;


PROC N_S_HH

	if $ > 15 then
		errmsg(tr(162), $);
		reenter;
	endif;

	if $ > N_R_HH then
		errmsg(tr(159), $, N_R_HH);
		reenter;
	endif;


PROC N_S_MM

	if $ > 59 then
		errmsg(tr(165), $);
		reenter;
	endif;
	if N_S_HH = 15 and $ > 0 then
		errmsg(tr(164), N_S_HH, $);
		reenter;
	endif;

	if N_R_HH = N_S_HH and $ > N_R_MM  then
		errmsg(tr(160), N_S_HH, $, N_R_HH, N_R_MM);
		reenter;
	endif;


PROC Q_FORM

PROC Q1
onfocus
	$ = 1;
//	setValueset($, membernumbers, memberNames);
	setValueset($, aCode, aLabel);

postproc
//	if !ispartial() then
	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
		errmsg(188);
	endif;

PROC Q2_NUM

onfocus

	$ = curocc();
	consumeItem = getLabel($, curocc());
	skip to Q2A;


PROC Q7

preproc

	if not(schoolGirls > 0 or schoolBoys > 0) then
		skip to Q8;
	endif;


PROC S_FORM


PROC S1
preproc
//	if !ispartial() then
//	If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
//		errmsg(191);
//	endif;

onfocus

//	setValueset($, memberNumbers, memberNames);

//	Adult person
	setValueset($, acode, aLabel);


PROC S2

preproc

	If not(C2 = 1 or C4 = 1 or C6 = 1 or C7 = 1 or C8 = 1 or C9 = 1) then
		skip to S3;
	endif;
	mainElSource = getvaluelabel(C10);


PROC U1

onfocus
//	Adult person
	setValueset($, acode, aLabel);

//	setValueset($, memberNumbers, memberNames);


PROC U2

onfocus

	$ = curocc();
	productName = getLabel($, curocc());
	skip to U2A;


PROC U2A

postproc

	if $ = 1 then
		skip to u2c;
	endif;


PROC U2B
postproc
	skip to next;



PROC U2C
onfocus
	//Value set with extra adult person.
	numeric i = 0;
	while i < 20 do
		if aCode(i) = NOTAPPL then
			//here is where I need to insert the extra "member" if I haven't done it already
			if aLabel(i-1) <> maketext(tr(110)) then
				aCode(i) = i;
				aLabel(i) = maketext(tr(110));
				aCode(i+1) = NOTAPPL;
				break;
			endif;
		endif;
		inc(i);
	enddo;	
	setValueset($, aCode, aLabel);


PROC U3

onfocus

	$ = curocc();
	businessName = getLabel($, curocc());
	skip to U3A;


PROC U3A

postproc

	if $ = 1 then
		skip to U3C;
	endif;


PROC U3B
postproc
	skip to next;
PROC U3C
onfocus
	setValueset($, aCode, aLabel);
//	setValueset($, memberNumbers, memberNames);




PROC T1

onfocus

	if hhDemographics(1) < 1 or hhDemographics(1) in NOTAPPL, DEFAULT then //No women in household
		skip to W_FORM;
	else
		array wCode(10); //Max 10 women in HH
		array String wLabel(10);

		//Loop through household memebers to find women
		numeric i = 1, j = 0;
		while i <= 20 do
			if AB1(i) = "" then
				//finished.
				break;
			else
				if  AB4(i) = 2 and AB5(i) > 14 then	//Found a woman
					wcode(j) = i;
					wLabel(j) = AB1(i);
					inc(j);
				endif;
				inc(i);
			endif;
		enddo;

		wcode(j) = NOTAPPL;

		setValueset($, wcode, wLabel);
	endif;



PROC W1

onfocus

	if hhDemographics(1) < 1 or hhDemographics(1) in NOTAPPL, DEFAULT then //No women in household
		skip to AA_END_FORM;
	else
//	if !ispartial() then
		If (ispartial() and visualValue($) = NOTAPPL) or !ispartial() then
			errmsg(tr(147));
		endif;
	$ = T1;
	skip to W2_NO;
//		array wCode(10); //Max 10 women in HH
//		array String wLabel(10);

		//Loop through household memebers to find women
//		numeric i = 1, j = 0;
//		while i <= 20 do
//			if AB1(i) = "" then
//				//finished.
//				break;
//			else
//				if  AB4(i) = 2 and AB5(i) > 14 then	//Found a woman
//					wcode(j) = i;
//					wLabel(j) = AB1(i);
//					inc(j);
//				endif;
//				inc(i);
//			endif;
//		enddo;

//		wcode(j) = NOTAPPL;

//		setValueset($, wcode, wLabel);
	endif;



PROC W2_NO

preproc

	//onfocus
		$ = curocc();
		socAndSec = getLabel($, curocc());
	//	errmsg("W2a: %s ", lstrip(socAndSec));
		skip to W2A;



PROC GP1
postproc

	if $ = 2 then
		skip to GP5;
	endif;	
PROC GP_MEM
preproc
	setValueset($, persons12AndAboveNos, persons12AndAboveNames);
PROC GP2
preproc
    $ = GP_MEM[(curocc()*2)-1:2];
	Member12AndAbove = getlabel(GP_MEM,$);
	if $ <> "" then
	 skip;
	else
     skip to next;
	endif;


PROC GP18
postproc

	if $ = 1 then
		skip to GP20;
	endif;	
PROC GP20
postproc

	if $ = 2 then
		skip to GP23;
	endif;	
PROC GP24
preproc
 if GP23 = 2 then
  skip to GP25;
 endif; 
PROC GP27
preproc
 if pos("1", GP26) = 0 then
  skip to GP28;
 endif; 
PROC GP28
preproc
 if pos("2", GP26) = 0 then
  skip to GP29;
 endif; 
PROC GP29
preproc
 if pos("3", GP26) = 0 then
  skip to GP30;
 endif; 
PROC GP30
preproc
 if pos("4", GP26) = 0 then
  skip to GP31;
 endif; 
PROC GP31
preproc
 if pos("5", GP26) = 0 then
  skip to GP32;
 endif; 
PROC GP32
preproc
 if pos("6", GP26) = 0 then
  skip to GP33;
 endif; 
PROC GP34
preproc
 if pos("1", GP33) = 0 then
  skip to GP35;
 endif; 
PROC GP35
preproc
 if pos("2", GP33) = 0 then
  skip to GP36;
 endif; 
PROC GP36
preproc
 if pos("3", GP33) = 0 then
  skip to GP37;
 endif; 
PROC GP37
preproc
 if pos("4", GP33) = 0 then
  skip to GP38;
 endif; 
PROC GP38
preproc
 if pos("5", GP33) = 0 then
  skip to GP39;
 endif; 
PROC GP39
preproc
 if pos("6", GP33) = 0 then
  skip to GP40;
 endif; 
PROC X1
preproc
 if c128 < 1 then
  skip to AA_END_FORM;
 endif; 

postproc
	if $ = 2 then
		skip to AA_END_FORM;
	endif;	
PROC AA20

preproc

	$ = AALOGIN;
	noinput;

